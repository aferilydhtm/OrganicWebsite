{"file":"sc-payment.js","mappings":";;;;;;;;;;;;;;;;;;;AAAA,MAAM,YAAY,GAAG,0kBAA0kB;;;;;;;;;;;;;;;;;yUC+C9kB,UAAE;;;;0WAoBqB,UAAE,4HAE3B,UAAE,yaASI,UAAE,oFAImB,UAAE,yIAE3B,UAAE;;;;;;;;;;kXAyBF,UAAE,8dAWA,UAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","names":[],"sources":["./src/components/controllers/checkout-form/payment/sc-payment.scss?tag=sc-payment&encapsulation=shadow","./src/components/controllers/checkout-form/payment/sc-payment.tsx"],"sourcesContent":[":host {\n  display: flex !important;\n  flex-direction: column;\n  gap: var(--sc-input-label-margin);\n  position: relative;\n  font-family: var(--sc-font-sans);\n}\n\n.sc-payment-toggle-summary {\n  line-height: 1;\n  display: flex;\n  align-items: center;\n  gap: 0.5em;\n  font-weight: var(--sc-font-weight-semibold);\n}\n\n.sc-payment-label {\n  display: flex;\n  justify-content: space-between;\n}\n\n.sc-payment-instructions {\n  color: var(--sc-color-gray-600);\n  font-size: var(--sc-font-size-small);\n  line-height: var(--sc-line-height-dense);\n}\n\n.sc-payment {\n  &__stripe-card-element {\n    display: flex !important;\n    flex-direction: column;\n    gap: var(--sc-input-label-margin);\n    position: relative;\n  }\n}\n","import { Component, Element, Fragment, h, Host, Prop } from '@stencil/core';\nimport { __ } from '@wordpress/i18n';\nimport { state as checkoutState } from '@store/checkout';\nimport { state as processorsState } from '@store/processors';\nimport { state as selectedProcessor } from '@store/selected-processor';\nimport { ManualPaymentMethods } from './ManualPaymentMethods';\nimport { getAvailableProcessor, hasMultipleProcessorChoices, availableManualPaymentMethods, availableProcessors } from '@store/processors/getters';\n\n/**\n * @part base - The elements base wrapper.\n * @part form-control - The form control wrapper.\n * @part label - The input label.\n * @part help-text - Help text that describes how to use the input.\n * @part test-badge__base - Test badge base.\n * @part test-badge__content - Test badge content.\n */\n@Component({\n  tag: 'sc-payment',\n  styleUrl: 'sc-payment.scss',\n  shadow: true,\n})\nexport class ScPayment {\n  /** This element. */\n  @Element() el: HTMLScPaymentElement;\n\n  @Prop() stripePaymentElement: boolean;\n\n  /** Disabled processor types */\n  @Prop() disabledProcessorTypes: string[];\n\n  @Prop() secureNotice: string;\n\n  /** The input's label. */\n  @Prop() label: string;\n\n  /** Hide the test mode badge */\n  @Prop() hideTestModeBadge: boolean;\n\n  componentWillLoad() {\n    processorsState.disabled.processors = this.disabledProcessorTypes;\n  }\n\n  renderStripe(processor) {\n    return (\n      <sc-payment-method-choice key={processor?.id} processor-id=\"stripe\" card={this.stripePaymentElement}>\n        <span slot=\"summary\" class=\"sc-payment-toggle-summary\">\n          <sc-icon name=\"credit-card\" style={{ fontSize: '24px' }}></sc-icon>\n          <span>{__('Credit Card', 'surecart')}</span>\n        </span>\n\n        <div class=\"sc-payment__stripe-card-element\">\n          <slot name=\"stripe\" />\n        </div>\n      </sc-payment-method-choice>\n    );\n  }\n\n  renderPayPal(processor) {\n    const stripe = getAvailableProcessor('stripe');\n    return (\n      <Fragment>\n        <sc-payment-method-choice key={processor?.id} processor-id=\"paypal\">\n          <span slot=\"summary\" class=\"sc-payment-toggle-summary\">\n            <sc-icon name=\"paypal\" style={{ width: '80px', fontSize: '24px' }}></sc-icon>\n          </span>\n\n          <sc-card>\n            <sc-payment-selected label={__('PayPal selected for check out.', 'surecart')}>\n              <sc-icon slot=\"icon\" name=\"paypal\" style={{ width: '80px' }}></sc-icon>\n              {__('Another step will appear after submitting your order to complete your purchase details.', 'surecart')}\n            </sc-payment-selected>\n          </sc-card>\n        </sc-payment-method-choice>\n\n        {!stripe && (\n          <sc-payment-method-choice key={processor?.id} processor-id=\"paypal\" method-id=\"card\">\n            <span slot=\"summary\" class=\"sc-payment-toggle-summary\">\n              <sc-icon name=\"credit-card\" style={{ fontSize: '24px' }}></sc-icon>\n              <span>{__('Credit Card', 'surecart')}</span>\n            </span>\n\n            <sc-card>\n              <sc-payment-selected label={__('Credit Card selected for check out.', 'surecart')}>\n                <sc-icon name=\"credit-card\" slot=\"icon\" style={{ fontSize: '24px' }}></sc-icon>\n                {__('Another step will appear after submitting your order to complete your purchase details.', 'surecart')}\n              </sc-payment-selected>\n            </sc-card>\n          </sc-payment-method-choice>\n        )}\n      </Fragment>\n    );\n  }\n\n  render() {\n    // payment is not required for this order.\n    if (checkoutState.checkout?.payment_method_required === false) {\n      return null;\n    }\n\n    const Tag = hasMultipleProcessorChoices() || selectedProcessor?.id === 'paypal' ? 'sc-toggles' : 'div';\n    const mollie = getAvailableProcessor('mollie');\n\n    return (\n      <Host>\n        <sc-form-control label={this.label} exportparts=\"label, help-text, form-control\">\n          <div class=\"sc-payment-label\" slot=\"label\">\n            <div>{this.label}</div>\n            {checkoutState.mode === 'test' && !this.hideTestModeBadge && (\n              <sc-tag type=\"warning\" size=\"small\" exportparts=\"base:test-badge__base, content:test-badge__content\">\n                {__('Test Mode', 'surecart')}\n              </sc-tag>\n            )}\n          </div>\n\n          {mollie?.id ? (\n            <sc-checkout-mollie-payment processor-id={mollie?.id}></sc-checkout-mollie-payment>\n          ) : (\n            <Tag collapsible={false} theme=\"container\">\n              {!availableProcessors()?.length && !availableManualPaymentMethods()?.length && (\n                <sc-alert type=\"info\" open>\n                  {__('You do not have any processors enabled for this mode and cart. Please configure your processors.', 'surecart')}\n                </sc-alert>\n              )}\n              {(availableProcessors() || []).map(processor => {\n                switch (processor?.processor_type) {\n                  case 'stripe':\n                    return this.renderStripe(processor);\n                  case 'paypal':\n                    return this.renderPayPal(processor);\n                }\n              })}\n              <ManualPaymentMethods methods={availableManualPaymentMethods()} />\n            </Tag>\n          )}\n        </sc-form-control>\n      </Host>\n    );\n  }\n}\n"],"version":3}
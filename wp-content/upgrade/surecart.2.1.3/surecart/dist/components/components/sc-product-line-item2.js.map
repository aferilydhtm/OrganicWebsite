{"file":"sc-product-line-item2.js","mappings":";;;;;;;;AAAA,MAAM,oBAAoB,GAAG,61FAA61F;;;;;;;;;;;;;;;;;;;;;;;;;;;;4JC0F52F,eAAO,CAAC,UAAE;;MAMV,UAAE,4cAQyC,eAAO,CAAC,UAAE;;;;;6xBA6ClD,UAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","names":[],"sources":["./src/components/ui/product-line-item/sc-product-line-item.scss?tag=sc-product-line-item&encapsulation=shadow","./src/components/ui/product-line-item/sc-product-line-item.tsx"],"sourcesContent":[":host {\n  display: block;\n  font-family: var(--sc-font-sans);\n}\n\n.item {\n  box-sizing: border-box;\n  margin: 0px;\n  min-width: 0px;\n  display: flex;\n  gap: 18px;\n  justify-content: space-between;\n  align-items: stretch;\n  width: 100%;\n  border-bottom: none;\n\n  &--has-image {\n    align-items: center;\n    container-type: inline-size;\n    @container (max-width: 290px) {\n      .item__image {\n        display: none;\n      }\n    }\n  }\n\n  &__scratch-price {\n    opacity: 0.75;\n    font-size: 90%;\n    text-decoration: line-through;\n  }\n}\n\n.item__text {\n  box-sizing: border-box;\n  margin: 0px;\n  min-width: 0px;\n  display: flex;\n  gap: 6px;\n  flex-direction: column;\n  align-items: flex-start;\n  justify-content: flex-start;\n  flex: 1 1 0%;\n}\n\n.item__title {\n  box-sizing: border-box;\n  min-width: 0px;\n  margin: 0;\n  color: var(--sc-line-item-title-color, var(--sc-input-label-color));\n  font-weight: var(--sc-font-weight-semibold);\n  font-size: var(--sc-font-size-medium);\n  line-height: var(--sc-line-height-dense);\n  cursor: pointer;\n  display: -webkit-box;\n  display: -moz-box;\n  -webkit-box-orient: vertical;\n  -moz-box-orient: vertical;\n  -webkit-line-clamp: 3;\n  -moz-box-lines: 3;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n.item__suffix {\n  flex: 1;\n  box-sizing: border-box;\n  margin: 0px;\n  min-width: 0px;\n  display: flex;\n  flex-direction: column;\n  -webkit-box-pack: start;\n  justify-content: space-between;\n  align-items: flex-end;\n  min-width: 100px;\n  margin-left: auto;\n}\n\n.item__price {\n  text-align: right;\n  max-width: 100%;\n}\n\n.item__description {\n  font-size: var(--sc-font-size-small);\n  line-height: var(--sc-line-height-dense);\n  opacity: 0.75;\n}\n\n.item__image {\n  width: var(--sc-product-line-item-image-size, 4em);\n  height: var(--sc-product-line-item-image-size, 4em);\n  object-fit: cover;\n  border-radius: 4px;\n  border: solid 1px var(--sc-input-border-color, var(--sc-input-border));\n  display: block;\n  box-shadow: var(--sc-input-box-shadow);\n}\n\n.product__description {\n  display: flex;\n  gap: 0.5em;\n  align-items: center;\n}\n\n.price {\n  font-size: var(--sc-font-size-medium);\n  font-weight: var(--sc-font-weight-semibold);\n  color: var(--sc-input-label-color);\n  line-height: var(--sc-line-height-dense);\n}\n\n.price__description {\n  font-size: var(--sc-font-size-small);\n  line-height: var(--sc-line-height-dense);\n  color: var(--sc-input-label-color);\n  opacity: 0.75;\n}\n\n.item__remove {\n  cursor: pointer;\n  color: var(--sc-color-gray-400);\n  margin-bottom: var(--sc-spacing-small);\n}\n\n.actions__divider {\n  opacity: 0.25;\n  margin: 0 0.2em;\n}\n\n.item--is-rtl {\n  &.price {\n    text-align: right;\n  }\n  .item__price {\n    text-align: left;\n  }\n}\n\n.base {\n  display: grid;\n  gap: var(--sc-spacing-x-small);\n}\n\n.fee__description {\n  opacity: 0.75;\n}\n","import { Component, h, Prop, Event, EventEmitter, Element, Fragment } from '@stencil/core';\nimport { __, _n, sprintf } from '@wordpress/i18n';\nimport { isRtl } from '../../../functions/page-align';\nimport { Fee, Media } from '../../../types';\nimport { sizeImage } from '../../../functions/media';\n\n/**\n * @part base - The elements base wrapper.\n * @part text - The text wrapper.\n * @part title - The product title.\n * @part static-quantity - The statically displayed quantity.\n * @part quantity__base - The quantity base wrapper.\n * @part input - The input control.\n * @part minus - The minus control.\n * @part minus-icon - The minus icon.\n * @part plus - The plus control.\n * @part plus-icon - The plus icon.\n * @part remove-icon__base - The remove icon base wrapper.\n * @part price - The price wrapper.\n * @part price__amount - The price amount.\n * @part price__description - The price description.\n * @part suffix - The suffix items.\n */\n@Component({\n  tag: 'sc-product-line-item',\n  styleUrl: 'sc-product-line-item.scss',\n  shadow: true,\n})\nexport class ScProductLineItem {\n  @Element() el: HTMLScProductLineItemElement;\n\n  /** Url for the product image */\n  @Prop() imageUrl: string;\n\n  /** The product media */\n  @Prop() media: Media;\n\n  /** Product name */\n  @Prop() name: string;\n\n  /** Quantity */\n  @Prop() quantity: number;\n\n  /** Product monetary amount */\n  @Prop() amount: number;\n\n  /** Product line item fees. */\n  @Prop() fees: Fee[];\n\n  /** Is the setup fee not included in the free trial? */\n  @Prop() setupFeeTrialEnabled: boolean = true;\n\n  /** The line item scratch amount */\n  @Prop() scratchAmount: number;\n\n  /** Currency for the product */\n  @Prop() currency: string;\n\n  /** Recurring interval (i.e. monthly, once, etc.) */\n  @Prop() interval: string;\n\n  /** Trial duration days */\n  @Prop() trialDurationDays: number;\n\n  /** Is the line item removable */\n  @Prop() removable: boolean;\n\n  /** Can we select the quantity */\n  @Prop() editable: boolean = true;\n\n  /** The max allowed. */\n  @Prop() max: number = 100;\n\n  /** Emitted when the quantity changes. */\n  @Event({ bubbles: false }) scUpdateQuantity: EventEmitter<number>;\n\n  /** Emitted when the quantity changes. */\n  @Event({ bubbles: false }) scRemove: EventEmitter<void>;\n\n  renderPriceAndInterval() {\n    const setupFee = (this.fees || []).find(fee => fee.fee_type === 'setup');\n    if (this.trialDurationDays) {\n      return (\n        <div class=\"item__price\" part=\"price\">\n          <div class=\"price\" part=\"price__amount\">\n            {!!setupFee && !this.setupFeeTrialEnabled ? (\n              <Fragment>\n                {setupFee?.description} <sc-format-number part=\"price__amount\" type=\"currency\" currency={this.currency} value={setupFee.amount}></sc-format-number>\n              </Fragment>\n            ) : (\n              sprintf(_n('%d day free', '%d days free', this.trialDurationDays, 'surecart'), this.trialDurationDays)\n            )}\n          </div>\n          <div class=\"price__description\" part=\"price__description\">\n            {\n              /** translators: 30 days free, Then $99 per month. */\n              __('Then', 'surecart')\n            }{' '}\n            {!!this.scratchAmount && this.scratchAmount > this.amount && (\n              <Fragment>\n                <sc-format-number class=\"item__scratch-price\" part=\"price__scratch\" type=\"currency\" currency={this.currency} value={this.scratchAmount}></sc-format-number>{' '}\n              </Fragment>\n            )}\n            <sc-format-number part=\"price__amount\" type=\"currency\" currency={this.currency} value={this.amount}></sc-format-number> {!!this.interval && this.interval}\n            {!!setupFee && !this.setupFeeTrialEnabled && sprintf(_n('starting in %d day', 'starting in %d days', this.trialDurationDays, 'surecart'), this.trialDurationDays)}\n          </div>\n        </div>\n      );\n    }\n\n    return (\n      <div class=\"item__price\" part=\"price\">\n        <div class=\"price\" part=\"price__amount\">\n          {!!this.scratchAmount && this.scratchAmount !== this.amount && (\n            <Fragment>\n              <sc-format-number class=\"item__scratch-price\" type=\"currency\" currency={this.currency} value={this.scratchAmount}></sc-format-number>{' '}\n            </Fragment>\n          )}\n          <sc-format-number type=\"currency\" currency={this.currency} value={this.amount}></sc-format-number>\n        </div>\n        {!!this.interval && (\n          <div class=\"price__description\" part=\"price__description\">\n            {this.interval}\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <div class=\"base\" part=\"base\">\n        <div part=\"product-line-item\" class={{ 'item': true, 'item--has-image': !!this.imageUrl, 'item--is-rtl': isRtl() }}>\n          {!!this.imageUrl && <img part=\"image\" src={sizeImage(this.imageUrl, 130)} class=\"item__image\" />}\n          <div class=\"item__text\" part=\"text\">\n            <div class=\"item__title\" part=\"title\">\n              <slot name=\"title\">{this.name}</slot>\n            </div>\n            {this.editable && (\n              <sc-quantity-select\n                max={this.max || Infinity}\n                exportparts=\"base:quantity__base, minus, minus-icon, plus, plus-icon, input\"\n                clickEl={this.el}\n                quantity={this.quantity}\n                onScChange={e => e.detail && this.scUpdateQuantity.emit(e.detail)}\n              ></sc-quantity-select>\n            )}\n            {!this.editable && this.quantity > 1 && (\n              <span class=\"item__description\" part=\"static-quantity\">\n                {__('Qty:', 'surecart')} {this.quantity}\n              </span>\n            )}\n          </div>\n          <div class=\"item__suffix\" part=\"suffix\">\n            {this.removable ? <sc-icon exportparts=\"base:remove-icon__base\" class=\"item__remove\" name=\"x\" onClick={() => this.scRemove.emit()}></sc-icon> : <div></div>}\n            {this.renderPriceAndInterval()}\n          </div>\n        </div>\n        {(this.fees || []).map(fee => {\n          if (this.trialDurationDays && !this.setupFeeTrialEnabled && fee.fee_type === 'setup') return null;\n          return (\n            <sc-line-item>\n              <sc-format-number slot=\"price-description\" type=\"currency\" value={fee?.amount} currency={this.currency || 'usd'} />\n              <span slot=\"price-description\" class=\"fee__description\">\n                {fee?.description}\n              </span>\n            </sc-line-item>\n          );\n        })}\n      </div>\n    );\n  }\n}\n"],"version":3}
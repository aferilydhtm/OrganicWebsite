{"file":"sc-product-item-image2.js","mappings":";;;;AAAA,MAAM,qBAAqB,GAAG,qiCAAqiC;;MCUtjC,kBAAkB;;;;;;;;;EAU7B,MAAM;;IACJ,IAAI,MAAA,IAAI,CAAC,YAAY,0CAAE,GAAG,EAAE;MAC1B,OAAO,MAAA,IAAI,CAAC,YAAY,0CAAE,GAAG,CAAC;KAC/B;IAED,IAAI,MAAC,MAAA,IAAI,CAAC,YAAY,0CAAE,KAAe,0CAAE,GAAG,EAAE;MAC5C,OAAO,SAAS,CAAC,MAAC,MAAA,IAAI,CAAC,YAAY,0CAAE,KAAe,0CAAE,GAAG,EAAE,YAAY,CAAC,kCAAkC,EAAE,GAAG,CAAC,CAAC,CAAC;KACnH;IAED,OAAO,EAAE,CAAC;GACX;EAED,MAAM;IACJ,QACE,EAAC,IAAI,IAAC,KAAK,EAAE,EAAE,WAAW,EAAE,MAAM,EAAE,IAClC,WACE,KAAK,EAAE;QACL,aAAa,EAAE,IAAI;QACnB,cAAc,EAAE,IAAI,CAAC,MAAM,KAAK,SAAS;QACzC,YAAY,EAAE,IAAI,CAAC,MAAM,KAAK,OAAO;OACtC,IAEA,CAAC,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,WAAK,GAAG,EAAE,IAAI,CAAC,MAAM,EAAE,EAAE,GAAG,EAAE,IAAI,CAAC,GAAG,GAAI,GAAG,WAAK,KAAK,EAAC,yBAAyB,GAAG,CACnG,CACD,EACP;GACH;;;;;;;;;;;;;;;;;;;;;;;","names":[],"sources":["./src/components/controllers/products/sc-product-item-image/sc-product-item-image.scss?tag=sc-product-item-image&encapsulation=shadow","./src/components/controllers/products/sc-product-item-image/sc-product-item-image.tsx"],"sourcesContent":[":host {\n  border-style: none;\n}\n\n.product-img {\n  max-width: 100%;\n  aspect-ratio: var(--sc-product-image-aspect-ratio);\n  padding-top: var(--sc-product-image-padding-top, 0);\n  padding-bottom: var(--sc-product-image-padding-bottom, 0);\n  padding-left: var(--sc-product-image-padding-left, 0);\n  padding-right: var(--sc-product-image-padding-right, 0);\n  margin-top: var(--sc-product-image-margin-top, 0);\n  margin-bottom: var(--sc-product-image-margin-bottom, 0);\n  margin-left: var(--sc-product-image-margin-left, 0);\n  margin-right: var(--sc-product-image-margin-right, 0);\n  border: solid var(--sc-product-image-border-width) var(--sc-product-image-border-color);\n  border-radius: var(--sc-product-image-border-radius);\n  overflow: hidden;\n\n  > img {\n    width: 100%;\n    height: 100%;\n    box-sizing: border-box;\n    object-fit: contain;\n    display: block;\n    transition: transform var(--sc-transition-medium) ease;\n  }\n  &.is_covered > img {\n    object-fit: cover;\n  }\n  &.is_contained > img {\n    object-fit: contain;\n  }\n  &_placeholder {\n    width: 100%;\n    height: 100%;\n    background-color: var(--sc-color-gray-300);\n  }\n\n  &:hover img {\n    transform: scale(1.05);\n  }\n}\n","import { Component, h, Host, Prop } from '@stencil/core';\nimport { Media, ProductMedia } from '../../../../types';\nimport { sizeImage } from '../../../../functions/media';\nimport { applyFilters } from '@wordpress/hooks';\n\n@Component({\n  tag: 'sc-product-item-image',\n  styleUrl: 'sc-product-item-image.scss',\n  shadow: true,\n})\nexport class ScProductItemImage {\n  /* Product image url */\n  @Prop() productMedia: ProductMedia;\n\n  /* Product image alt */\n  @Prop() alt: string;\n\n  /* Product image sizing */\n  @Prop() sizing: 'cover' | 'contain';\n\n  getSrc() {\n    if (this.productMedia?.url) {\n      return this.productMedia?.url;\n    }\n\n    if ((this.productMedia?.media as Media)?.url) {\n      return sizeImage((this.productMedia?.media as Media)?.url, applyFilters('surecart/product-list/media/size', 900));\n    }\n\n    return '';\n  }\n\n  render() {\n    return (\n      <Host style={{ borderStyle: 'none' }}>\n        <div\n          class={{\n            'product-img': true,\n            'is_contained': this.sizing === 'contain',\n            'is_covered': this.sizing === 'cover',\n          }}\n        >\n          {!!this.getSrc() ? <img src={this.getSrc()} alt={this.alt} /> : <div class=\"product-img_placeholder\" />}\n        </div>\n      </Host>\n    );\n  }\n}\n"],"version":3}
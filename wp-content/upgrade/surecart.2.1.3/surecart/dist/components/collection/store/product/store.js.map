{"version":3,"file":"store.js","sourceRoot":"","sources":["../../../src/store/product/store.ts"],"names":[],"mappings":";AAAA,OAAO,EAAE,WAAW,EAAE,MAAM,gBAAgB,CAAC;AAoB7C,MAAM,OAAO,GAAG,CAAA,MAAA,MAAA,MAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,MAAM,0CAAE,YAAY,0CAAE,OAAO,KAAI,IAAI,CAAC;AAC9D,MAAM,MAAM,GAAG,CAAA,MAAA,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,MAAM,0CAAE,IAAI,KAAI,EAAE,CAAC;AAC3C,MAAM,aAAa,GAAG,CAAC,MAAM,IAAI,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAA,CAAC,aAAD,CAAC,uBAAD,CAAC,CAAE,QAAQ,KAAG,CAAC,aAAD,CAAC,uBAAD,CAAC,CAAE,QAAQ,CAAA,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,CAAA,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,QAAQ,CAAA,CAAC,CAAC;AAC/G,MAAM,WAAW,GAAG,CAAA,aAAa,aAAb,aAAa,uBAAb,aAAa,CAAE,MAAM,KAAI,IAAI,CAAC;AAElD,MAAM,KAAK,GAAG,WAAW,CACvB;EACE,MAAM,EAAE,MAAA,MAAA,MAAA,MAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,MAAM,0CAAE,YAAY,0CAAE,IAAI,0CAAE,EAAE;EAC9C,IAAI,EAAE,CAAA,MAAA,MAAA,MAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,MAAM,0CAAE,YAAY,0CAAE,IAAI,KAAI,MAAM;EAClD,OAAO;EACP,MAAM;EACN,QAAQ,EAAE,CAAC;EACX,aAAa;EACb,KAAK,EAAE,IAAI;EACX,MAAM,EAAE,IAAI;EACZ,IAAI,EAAE,KAAK;EACX,QAAQ,EAAE,CAAA,aAAa,aAAb,aAAa,uBAAb,aAAa,CAAE,QAAQ,MAAI,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,QAAQ,CAAA;EACtD,WAAW;EACX,KAAK,EAAE,IAAI;EACX,WAAW,EAAE,MAAA,MAAA,MAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,MAAM,0CAAE,YAAY,0CAAE,aAAa;EACxD,SAAS,EAAE;IACT,QAAQ,EAAE,aAAa,aAAb,aAAa,uBAAb,aAAa,CAAE,EAAE;IAC3B,QAAQ,EAAE,CAAC;IACX,GAAG,CAAC,CAAA,aAAa,aAAb,aAAa,uBAAb,aAAa,CAAE,MAAM,EAAC,CAAC,CAAC,EAAE,aAAa,EAAE,WAAW,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC;GACjE;CACF,EACD,CAAC,QAAQ,EAAE,QAAQ,EAAE,EAAE;EACrB,OAAO,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,KAAK,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;AAC/D,CAAC,CACF,CAAC;AAEF,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,EAAE,EAAE,OAAO,EAAE,WAAW,EAAE,GAAG,KAAK,CAAC;AAC5D,eAAe,KAAK,CAAC;AACrB,OAAO,EAAE,KAAK,EAAE,QAAQ,EAAE,EAAE,EAAE,OAAO,EAAE,WAAW,EAAE,CAAC;AAErD,IAAI,MAAA,MAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,EAAE,0CAAE,KAAK,EAAE;EACrB,MAAM,CAAC,EAAE,CAAC,KAAK,CAAC,OAAO,GAAG,KAAK,CAAC;CACjC","sourcesContent":["import { createStore } from '@stencil/store';\nimport { LineItemData } from 'src/types';\nimport { Price, Product } from 'src/types';\n\ninterface Store {\n  formId: number;\n  mode: 'live' | 'test';\n  product: Product;\n  prices: Price[];\n  quantity: number;\n  selectedPrice: Price;\n  total: number;\n  busy: boolean;\n  disabled: boolean;\n  checkoutUrl: string;\n  adHocAmount: number;\n  dialog: string;\n  line_item: LineItemData;\n  error: string;\n}\nconst product = window?.scData?.product_data?.product || null;\nconst prices = product?.prices?.data || [];\nconst selectedPrice = (prices || []).sort((a, b) => a?.position - b?.position).find(price => !price?.archived);\nconst adHocAmount = selectedPrice?.amount || null;\n\nconst store = createStore<Store>(\n  {\n    formId: window?.scData?.product_data?.form?.ID,\n    mode: window?.scData?.product_data?.mode || 'live',\n    product,\n    prices,\n    quantity: 1,\n    selectedPrice,\n    total: null,\n    dialog: null,\n    busy: false,\n    disabled: selectedPrice?.archived || product?.archived,\n    adHocAmount,\n    error: null,\n    checkoutUrl: window?.scData?.product_data?.checkout_link,\n    line_item: {\n      price_id: selectedPrice?.id,\n      quantity: 1,\n      ...(selectedPrice?.ad_hoc ? { ad_hoc_amount: adHocAmount } : {}),\n    },\n  },\n  (newValue, oldValue) => {\n    return JSON.stringify(newValue) !== JSON.stringify(oldValue);\n  },\n);\n\nconst { state, onChange, on, dispose, forceUpdate } = store;\nexport default state;\nexport { state, onChange, on, dispose, forceUpdate };\n\nif (window?.sc?.store) {\n  window.sc.store.product = store;\n}\n"]}
{"version":3,"file":"sc-product-item-list.js","sourceRoot":"","sources":["../../../../../src/components/controllers/products/sc-product-item-list/sc-product-item-list.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Component, Element, h, Prop, State, Watch } from '@stencil/core';\nimport { addQueryArgs, getQueryArgs } from '@wordpress/url';\nimport { __ } from '@wordpress/i18n';\n\nimport { Product } from '../../../../types';\nimport apiFetch from '../../../../functions/fetch';\n\nexport type LayoutConfig = {\n  blockName: string;\n  attributes: any;\n}[];\n\n@Component({\n  tag: 'sc-product-item-list',\n  styleUrl: 'sc-product-item-list.scss',\n  shadow: true,\n})\nexport class ScProductItemList {\n  @Element() el: HTMLScProductItemListElement;\n  /** Limit to a set of ids.  */\n  @Prop() ids: string[];\n\n  /** Sort */\n  @Prop({ mutable: true }) sort: string = 'created_at:desc';\n\n  /** Query to search for */\n  @Prop({ mutable: true }) query: string;\n\n  /** Should allow search */\n  @Prop() searchEnabled: boolean = true;\n\n  /** Should allow search */\n  @Prop() sortEnabled: boolean = true;\n\n  /** Should we paginate? */\n  @Prop() paginationEnabled: boolean = true;\n\n  /** Should we paginate? */\n  @Prop() ajaxPagination: boolean = true;\n\n  /** Should we auto-scroll to the top when paginating via ajax */\n  @Prop() paginationAutoScroll: boolean = true;\n\n  /* Layout configuration */\n  @Prop() layoutConfig: LayoutConfig;\n\n  /* Pagination alignment */\n  @Prop() paginationAlignment: string = 'center';\n\n  /* Limit per page */\n  @Prop() limit: number = 15;\n\n  /* Product list */\n  @State() products: Product[];\n\n  /* Loading indicator */\n  @State() loading: boolean = false;\n\n  /** Busy indicator */\n  @State() busy: boolean = false;\n\n  /* Current page */\n  @State() currentPage: number = 1;\n\n  @State() currentQuery: string;\n\n  @State() pagination: {\n    total: number;\n    total_pages: number;\n  } = {\n    total: 0,\n    total_pages: 0,\n  };\n\n  componentWillLoad() {\n    this.getProducts();\n  }\n\n  // Append URL if no 'product-page' found\n  doPagination(page: number) {\n    // handle ajax pagination\n    if (this.ajaxPagination) {\n      this.currentPage = page;\n      this.updateProducts();\n      this.paginationAutoScroll && this.el.scrollIntoView({ behavior: 'smooth' });\n      return;\n    }\n\n    // handle server pagination.\n    const newUrl = addQueryArgs(location.href, { 'product-page': page });\n    window.location.replace(newUrl);\n  }\n\n  // Fetch all products\n  async getProducts() {\n    const { 'product-page': page } = getQueryArgs(window.location.href) as { 'product-page': string };\n\n    this.currentPage = this.paginationEnabled && page ? parseInt(page) : 1;\n\n    try {\n      this.loading = true;\n      await this.fetchProducts();\n    } catch (error) {\n      console.error(error);\n    } finally {\n      this.loading = false;\n    }\n  }\n\n  @Watch('sort')\n  async handleSortChange() {\n    this.currentPage = 1;\n    this.updateProducts();\n  }\n\n  async updateProducts() {\n    try {\n      this.busy = true;\n      await this.fetchProducts();\n    } catch (error) {\n      console.error(error);\n    } finally {\n      this.busy = false;\n    }\n  }\n\n  private debounce;\n  @Watch('ids')\n  @Watch('limit')\n  handleIdsChange() {\n    if (this.debounce !== null) {\n      clearTimeout(this.debounce);\n      this.debounce = null;\n    }\n\n    this.debounce = window.setTimeout(() => {\n      // your debounced traitment\n      this.updateProducts();\n      this.debounce = null;\n    }, 200);\n  }\n\n  async fetchProducts() {\n    const response = (await apiFetch({\n      path: addQueryArgs(`surecart/v1/products/`, {\n        expand: ['prices', 'product_medias', 'product_media.media'],\n        archived: false,\n        status: ['published'],\n        per_page: this.limit,\n        page: this.currentPage,\n        sort: this.sort,\n        ...(this.ids?.length ? { ids: this.ids } : {}),\n        ...(this.query ? { query: this.query } : {}),\n      }),\n      parse: false,\n    })) as Response;\n    this.currentQuery = this.query;\n    this.pagination = {\n      total: parseInt(response.headers.get('X-WP-Total')),\n      total_pages: parseInt(response.headers.get('X-WP-TotalPages')),\n    };\n    this.products = (await response.json()) as Product[];\n  }\n\n  renderSortName() {\n    switch (this.sort) {\n      case 'created_at:desc':\n        return __('Latest', 'surecart');\n      case 'created_at:asc':\n        return __('Oldest', 'surecart');\n      case 'name:asc':\n        return __('Alphabetical, A-Z', 'surecart');\n      case 'name:desc':\n        return __('Alphabetical, Z-A', 'surecart');\n      default:\n        return __('Sort', 'surecart');\n    }\n  }\n\n  render() {\n    return (\n      <div class={{ 'product-item-list__wrapper': true, 'product-item-list__has-search': !!this.query }}>\n        {(this.searchEnabled || this.sortEnabled) && (\n          <div class=\"product-item-list__header\">\n            <div class=\"product-item-list__sort\">\n              {this.sortEnabled && (\n                <sc-dropdown style={{ '--panel-width': '15rem' }}>\n                  <sc-button type=\"text\" caret slot=\"trigger\">\n                    {this.renderSortName()}\n                  </sc-button>\n                  <sc-menu>\n                    <sc-menu-item onClick={() => (this.sort = 'created_at:desc')}>{__('Latest', 'surecart')}</sc-menu-item>\n                    <sc-menu-item onClick={() => (this.sort = 'created_at:asc')}>{__('Oldest', 'surecart')}</sc-menu-item>\n                    <sc-menu-item onClick={() => (this.sort = 'name:asc')}>{__('Alphabetical, A-Z', 'surecart')}</sc-menu-item>\n                    <sc-menu-item onClick={() => (this.sort = 'name:desc')}>{__('Alphabetical, Z-A', 'surecart')}</sc-menu-item>\n                  </sc-menu>\n                </sc-dropdown>\n              )}\n            </div>\n            <div class=\"product-item-list__search\">\n              {this.searchEnabled &&\n                (this.query?.length && this.query === this.currentQuery ? (\n                  <div class=\"product-item-list__search-tag\">\n                    <div class=\"product-item-list__search-label\">{__('Search Results:', 'surecart')}</div>\n                    <sc-tag\n                      clearable\n                      onScClear={() => {\n                        this.query = '';\n                        this.currentQuery = '';\n                        this.updateProducts();\n                      }}\n                    >\n                      {this.query}\n                    </sc-tag>\n                  </div>\n                ) : (\n                  <sc-input\n                    type=\"text\"\n                    placeholder=\"Search\"\n                    size=\"small\"\n                    onKeyDown={e => {\n                      if (e.key === 'Enter') {\n                        this.updateProducts();\n                      }\n                    }}\n                    value={this.query}\n                    onScInput={e => (this.query = e.target.value)}\n                  >\n                    {this.query ? (\n                      <sc-icon\n                        class=\"clear-button\"\n                        slot=\"prefix\"\n                        name=\"x\"\n                        onClick={() => {\n                          this.query = '';\n                        }}\n                      />\n                    ) : (\n                      <sc-icon slot=\"prefix\" name=\"search\" />\n                    )}\n                    <sc-button class=\"search-button\" type=\"link\" slot=\"suffix\" busy={this.busy} onClick={() => this.updateProducts()}>\n                      {__('Search', 'surecart')}\n                    </sc-button>\n                  </sc-input>\n                ))}\n            </div>\n          </div>\n        )}\n\n        {!this.products?.length && !this.loading && (\n          <sc-empty class=\"product-item-list__empty\" icon=\"shopping-bag\">\n            {__('No products found.', 'surecart')}\n          </sc-empty>\n        )}\n\n        <div class=\"product-item-list\">\n          {this.loading\n            ? [...Array(this.ids?.length || this.limit || 10)].map(() => (\n                <div class=\"product-item-list__loader\">\n                  {this.layoutConfig?.map(layout => {\n                    switch (layout.blockName) {\n                      case 'surecart/product-item-title':\n                        return (\n                          <div style={{ textAlign: 'var(--sc-product-title-align)' }}>\n                            <sc-skeleton style={{ width: '80%', display: 'inline-block' }}></sc-skeleton>\n                          </div>\n                        );\n                      case 'surecart/product-item-image':\n                        return (\n                          <sc-skeleton\n                            style={{\n                              'width': '100%',\n                              'minHeight': '90%',\n                              'aspectRatio': layout.attributes?.ratio ?? '1/1.4',\n                              '--sc-border-radius-pill': '12px',\n                              'display': 'inline-block',\n                            }}\n                          ></sc-skeleton>\n                        );\n                      case 'surecart/product-item-price':\n                        return (\n                          <div style={{ textAlign: 'var(--sc-product-price-align)' }}>\n                            <sc-skeleton style={{ width: '40%', display: 'inline-block' }}></sc-skeleton>\n                          </div>\n                        );\n                      default:\n                        return null;\n                    }\n                  })}\n                </div>\n              ))\n            : (this.products || []).map(product => {\n                return <sc-product-item exportparts=\"title, price, image\" product={product} layoutConfig={this.layoutConfig}></sc-product-item>;\n              })}\n        </div>\n        {!!this.products?.length && this.pagination.total > this.products.length && this.paginationEnabled && (\n          <div\n            class={{\n              'product-item-list__pagination': true,\n              '--is-aligned-left': this.paginationAlignment === 'left',\n              '--is-aligned-center': this.paginationAlignment === 'center',\n              '--is-aligned-right': this.paginationAlignment === 'right',\n            }}\n          >\n            <sc-pagination\n              page={this.currentPage}\n              perPage={this.limit}\n              total={this.pagination.total}\n              totalPages={this.pagination.total_pages}\n              totalShowing={this.limit}\n              onScNextPage={() => this.doPagination(this.currentPage + 1)}\n              onScPrevPage={() => this.doPagination(this.currentPage - 1)}\n            ></sc-pagination>\n          </div>\n        )}\n        {(this.busy || this.loading) && <sc-block-ui />}\n      </div>\n    );\n  }\n}\n"]}
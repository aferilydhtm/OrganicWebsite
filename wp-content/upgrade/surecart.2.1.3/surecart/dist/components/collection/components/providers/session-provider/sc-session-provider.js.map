{"version":3,"file":"sc-session-provider.js","sourceRoot":"","sources":["../../../../src/components/providers/session-provider/sc-session-provider.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Component, Element, Event, EventEmitter, h, Listen, Method, Prop, Watch } from '@stencil/core';\nimport { state as checkoutState } from '@store/checkout';\nimport { clearCheckout } from '@store/checkout/mutations';\nimport { state as selectedProcessor } from '@store/selected-processor';\nimport { __ } from '@wordpress/i18n';\nimport { addQueryArgs, getQueryArg, getQueryArgs, removeQueryArgs } from '@wordpress/url';\nimport { updateFormState } from '@store/form/mutations';\n\nimport { parseFormData } from '../../../functions/form-data';\nimport { createOrUpdateCheckout, fetchCheckout, finalizeCheckout } from '../../../services/session';\nimport { Checkout, FormStateSetter, LineItemData, PriceChoice } from '../../../types';\n\n@Component({\n  tag: 'sc-session-provider',\n  shadow: true,\n})\nexport class ScSessionProvider {\n  /** Element */\n  @Element() el: HTMLElement;\n\n  /** An array of prices to pre-fill in the form. */\n  @Prop() prices: Array<PriceChoice> = [];\n\n  /** Should we persist the session. */\n  @Prop() persist: boolean = true;\n\n  /** Update line items event */\n  @Event() scUpdateOrderState: EventEmitter<Checkout>;\n\n  /** Update line items event */\n  @Event() scUpdateDraftState: EventEmitter<Checkout>;\n\n  @Event() scPaid: EventEmitter<void>;\n\n  /** Error event */\n  @Event() scError: EventEmitter<{ message: string; code?: string; data?: any; additional_errors?: any } | {}>;\n\n  /** Set the state */\n  @Event() scSetState: EventEmitter<FormStateSetter>;\n\n  @Watch('prices')\n  handlePricesChange() {\n    let line_items = this.addInitialPrices() || [];\n    line_items = this.addPriceChoices(line_items);\n    if (!line_items?.length) {\n      return;\n    }\n    return this.loadUpdate({ line_items });\n  }\n\n  /**\n   * Finalize the order.\n   *\n   * @returns {Promise<Order>}\n   */\n  @Method()\n  async finalize() {\n    return await this.handleFormSubmit();\n  }\n\n  async getFormData() {\n    let data = {};\n    const form = this.el.querySelector('sc-form');\n    if (form) {\n      const json = await form.getFormJson();\n      data = parseFormData(json);\n    }\n    return data;\n  }\n\n  /**\n   * Handles the form submission.\n   * @param e\n   */\n  @Listen('scFormSubmit')\n  async handleFormSubmit() {\n    this.scError.emit({});\n\n    updateFormState('FINALIZE');\n\n    // Get current form state.\n    let data = await this.getFormData();\n\n    if (window?.scData?.recaptcha_site_key && window?.grecaptcha) {\n      try {\n        data['grecaptcha'] = await window.grecaptcha.execute(window.scData.recaptcha_site_key, { action: 'surecart_checkout_submit' });\n      } catch (e) {\n        console.error(e);\n        updateFormState('REJECT');\n        this.handleErrorResponse(e);\n        return;\n      }\n    }\n\n    // first lets make sure the session is updated before we process it.\n    try {\n      await this.update(data);\n    } catch (e) {\n      console.error(e);\n      updateFormState('REJECT');\n      this.handleErrorResponse(e);\n    }\n\n    // first validate server-side and get key\n    try {\n      checkoutState.checkout = await finalizeCheckout({\n        id: checkoutState?.checkout?.id,\n        query: {\n          ...(selectedProcessor?.method ? { payment_method_type: selectedProcessor?.method } : {}),\n          return_url: addQueryArgs(window.location.href, {\n            ...(checkoutState?.checkout?.id ? { checkout_id: checkoutState?.checkout?.id } : {}),\n            is_surecart_payment_redirect: true,\n          }),\n        },\n        data,\n        processor: {\n          id: selectedProcessor.id,\n          manual: selectedProcessor.manual,\n        },\n      });\n\n      // the checkout is paid.\n      if (['paid', 'processing'].includes(checkoutState.checkout?.status)) {\n        this.scPaid.emit();\n      }\n\n      if (checkoutState.checkout?.payment_intent?.processor_data?.mollie?.checkout_url) {\n        updateFormState('PAYING');\n        return setTimeout(() => window.location.assign(checkoutState.checkout?.payment_intent?.processor_data?.mollie?.checkout_url), 50);\n      }\n\n      setTimeout(() => {\n        updateFormState('PAYING');\n      }, 50);\n\n      return checkoutState.checkout;\n    } catch (e) {\n      console.error(e);\n      this.handleErrorResponse(e);\n    }\n  }\n\n  /**\n   * Handle paid event and update the\n   */\n  @Listen('scPaid')\n  async handlePaid() {\n    updateFormState('PAID');\n  }\n\n  @Listen('scPayError')\n  async handlePayError() {\n    updateFormState('REJECT');\n  }\n\n  @Listen('scUpdateAbandonedCart')\n  async handleAbandonedCartUpdate(e) {\n    const abandoned_checkout_enabled = e.detail;\n    this.loadUpdate({\n      abandoned_checkout_enabled,\n    });\n  }\n\n  /** Handles coupon updates. */\n  @Listen('scApplyCoupon')\n  async handleCouponApply(e) {\n    const promotion_code = e.detail;\n    this.scError.emit({});\n    this.loadUpdate({\n      discount: {\n        ...(promotion_code ? { promotion_code } : {}),\n      },\n    });\n  }\n\n  /** Find or create session on load. */\n  componentDidLoad() {\n    this.findOrCreateOrder();\n  }\n\n  /** Find or create an order */\n  async findOrCreateOrder() {\n    // get URL params.\n    const { redirect_status, checkout_id, line_items, coupon, is_surecart_payment_redirect } = getQueryArgs(window.location.href);\n    // remove params we don't want.\n    window.history.replaceState({}, document.title, removeQueryArgs(window.location.href, 'redirect_status', 'coupon', 'line_items', 'confirm_checkout_id', 'checkout_id'));\n\n    // handle abandoned checkout.\n    if (!!is_surecart_payment_redirect && !!checkout_id) {\n      updateFormState('FINALIZE');\n      updateFormState('PAYING');\n      return this.handleCheckoutIdFromUrl(checkout_id, coupon as string);\n    }\n\n    // handle redirect status.\n    if (!!redirect_status) {\n      return this.handleRedirectStatus(redirect_status, checkout_id);\n    }\n\n    // handle abandoned checkout.\n    if (!!checkout_id) {\n      return this.handleCheckoutIdFromUrl(checkout_id, coupon as string);\n    }\n\n    // handle initial line items.\n    if (!!line_items) {\n      return this.handleInitialLineItems(line_items, coupon as string);\n    }\n\n    // we have an existing saved checkout id in the session, and we are persisting.\n    const id = checkoutState?.checkout?.id;\n    if (id && this.persist) {\n      return this.handleExistingCheckout(id, coupon as string);\n    }\n\n    return this.handleNewCheckout(coupon as string);\n  }\n\n  /** Handle payment instrument redirect status */\n  async handleRedirectStatus(status, id) {\n    console.info('Handling payment redirect.');\n    // status failed.\n    if (status === 'failed') {\n      return this.scError.emit({\n        message: __('Payment unsuccessful. Please try again.', 'surecart'),\n      });\n    }\n\n    // get the\n    if (!id) {\n      return this.scError.emit({\n        message: __('Could not find checkout. Please contact us before attempting to purchase again.', 'surecart'),\n      });\n    }\n\n    // success, refetch the checkout\n    try {\n      updateFormState('FINALIZE');\n      updateFormState('PAID');\n      checkoutState.checkout = (await fetchCheckout({\n        id,\n        query: {\n          refresh_status: true,\n        },\n      })) as Checkout;\n\n      // TODO: should we even check this?\n      if (checkoutState.checkout?.status && ['paid', 'processing'].includes(checkoutState.checkout?.status)) {\n        setTimeout(() => {\n          this.scPaid.emit();\n        }, 100);\n      }\n    } catch (e) {\n      this.handleErrorResponse(e);\n    }\n  }\n\n  /** Handle abandoned checkout from URL */\n  async handleCheckoutIdFromUrl(id, promotion_code = '') {\n    console.info('Handling existing checkout from url.', promotion_code, id);\n\n    // if coupon code, load the checkout with the code.\n    if (promotion_code) {\n      return this.loadUpdate({\n        id,\n        discount: { promotion_code },\n        refresh_price_versions: true,\n      });\n    }\n\n    try {\n      updateFormState('FETCH');\n      checkoutState.checkout = (await fetchCheckout({\n        id,\n        query: {\n          refresh_status: true,\n        },\n      })) as Checkout;\n      updateFormState('RESOLVE');\n    } catch (e) {\n      this.handleErrorResponse(e);\n    }\n\n    // handle status.\n    switch (checkoutState.checkout?.status) {\n      case 'paid':\n      case 'processing':\n        return setTimeout(() => {\n          updateFormState('FINALIZE');\n          updateFormState('PAID');\n          this.scPaid.emit();\n        }, 100);\n\n      case 'payment_failed':\n        clearCheckout();\n        return this.scError.emit({\n          message: __('Payment unsuccessful. Please try again.', 'surecart'),\n        });\n\n      case 'payment_intent_canceled':\n      case 'canceled':\n        clearCheckout();\n        return this.scError.emit({\n          message: __('Payment canceled. Please try again.', 'surecart'),\n        });\n\n      case 'finalized':\n        this.scError.emit({\n          message: __('Payment unsuccessful. Please try again.', 'surecart'),\n        });\n        updateFormState('REJECT');\n    }\n  }\n\n  /** Handle line items (and maybe ) */\n  async handleInitialLineItems(line_items, promotion_code) {\n    console.info('Handling initial line items.');\n    // TODO: move this to central store.\n    const address = this.el.querySelector('sc-order-shipping-address');\n    clearCheckout();\n    return this.loadUpdate({\n      line_items,\n      refresh_price_versions: true,\n      ...(promotion_code ? { discount: { promotion_code } } : {}),\n      ...(address?.defaultCountry\n        ? {\n            shipping_address: {\n              country: address?.defaultCountry,\n            },\n          }\n        : {}),\n    });\n  }\n\n  /** Handle a brand new checkout. */\n  async handleNewCheckout(promotion_code) {\n    console.info('Handling new checkout.');\n    // get existing form data from defaults (default country selection, etc).\n    const data = this.getFormData();\n    const line_items = this.addPriceChoices(this.addInitialPrices() || []);\n    const address = this.el.querySelector('sc-order-shipping-address');\n\n    try {\n      updateFormState('FETCH');\n      checkoutState.checkout = (await createOrUpdateCheckout({\n        data: {\n          ...data,\n          ...(promotion_code ? { discount: { promotion_code } } : {}),\n          ...(address?.defaultCountry\n            ? {\n                shipping_address: {\n                  country: address?.defaultCountry,\n                },\n              }\n            : {}),\n          line_items,\n        },\n      })) as Checkout;\n      updateFormState('RESOLVE');\n    } catch (e) {\n      console.error(e);\n      this.handleErrorResponse(e);\n    }\n  }\n\n  /** Handle existing checkout */\n  async handleExistingCheckout(id, promotion_code) {\n    if (!id) return this.handleNewCheckout(promotion_code);\n    console.info('Handling existing checkout.');\n    try {\n      updateFormState('FETCH');\n      checkoutState.checkout = (await createOrUpdateCheckout({\n        id,\n        data: {\n          ...(promotion_code ? { discount: { promotion_code } } : {}),\n          refresh_price_versions: true,\n        },\n      })) as Checkout;\n      updateFormState('RESOLVE');\n    } catch (e) {\n      console.error(e);\n      this.handleErrorResponse(e);\n    }\n  }\n\n  /** Handle the error response. */\n  async handleErrorResponse(e) {\n    // reinitalize if order not found.\n    if (['checkout.not_found'].includes(e?.code)) {\n      window.history.replaceState({}, document.title, removeQueryArgs(window.location.href, 'checkout_id'));\n      clearCheckout();\n      return this.handleNewCheckout(false);\n    }\n\n    if (e?.additional_errors?.[0]?.code === 'order.line_items.old_price_versions') {\n      await this.loadUpdate({\n        id: checkoutState?.checkout?.id,\n        data: {\n          status: 'draft',\n          refresh_price_versions: true,\n        },\n      });\n      return;\n    }\n\n    if (['order.invalid_status_transition'].includes(e?.code)) {\n      await this.loadUpdate({\n        id: checkoutState?.checkout?.id,\n        data: {\n          status: 'draft',\n        },\n      });\n      this.handleFormSubmit();\n      return;\n    }\n\n    // expired\n    if (e?.code === 'rest_cookie_invalid_nonce') {\n      updateFormState('EXPIRE');\n      return;\n    }\n\n    // paid\n    if (e?.code === 'readonly') {\n      clearCheckout();\n      window.location.assign(removeQueryArgs(window.location.href, 'order'));\n      return;\n    }\n\n    console.log('emit', e);\n    this.scError.emit(e);\n    updateFormState('REJECT');\n  }\n\n  /** Looks through children and finds items needed for initial session. */\n  async initialize(args = {}) {\n    let line_items = this.addInitialPrices() || [];\n    line_items = this.addPriceChoices(line_items);\n\n    if (line_items?.length) {\n      return this.loadUpdate({ line_items, ...args });\n    } else {\n      return this.loadUpdate({ ...args });\n    }\n  }\n\n  /** Add prices that are passed into the component. */\n  addInitialPrices() {\n    if (!this?.prices?.length) return [];\n\n    // check for id\n    if (this.prices.some(p => !p?.id)) {\n      return;\n    }\n\n    // add prices that are passed into this component.\n    return this.prices.map(price => {\n      return {\n        price_id: price.id,\n        quantity: price.quantity,\n      };\n    });\n  }\n\n  /** Add default prices that may be selected in form. */\n  addPriceChoices(line_items = []) {\n    const elements = this.el.querySelectorAll('[price-id]') as any;\n\n    elements.forEach(el => {\n      // handle price choices.\n      if (el.checked) {\n        line_items.push({\n          quantity: el.quantity || 1,\n          price_id: el.priceId,\n          ...(el.defaultAmount ? { ad_hoc_amount: el.defaultAmount } : {}),\n        });\n      }\n      // handle donation default amount.\n      if (el.defaultAmount) {\n        line_items.push({\n          quantity: el.quantity || 1,\n          price_id: el.priceId,\n          ad_hoc_amount: el.defaultAmount,\n        });\n      }\n    });\n\n    return line_items;\n  }\n\n  getSessionId() {\n    // check url first.\n    const checkoutId = getQueryArg(window.location.href, 'checkout_id');\n    if (!!checkoutId) {\n      return checkoutId;\n    }\n\n    // check existing order.\n    if (checkoutState?.checkout?.id) {\n      return checkoutState?.checkout?.id;\n    }\n\n    // we don't have and order id.\n    return null;\n  }\n\n  async fetchCheckout(id, { query = {}, data = {} } = {}) {\n    try {\n      updateFormState('FETCH');\n      const checkout = (await createOrUpdateCheckout({\n        id,\n        query,\n        data,\n      })) as Checkout;\n      updateFormState('RESOLVE');\n      return checkout;\n    } catch (e) {\n      this.handleErrorResponse(e);\n    }\n  }\n\n  /** Fetch a session. */\n  async fetch(query = {}) {\n    try {\n      updateFormState('FETCH');\n      checkoutState.checkout = (await fetchCheckout({\n        id: this.getSessionId(),\n        query,\n      })) as Checkout;\n      updateFormState('RESOLVE');\n    } catch (e) {\n      this.handleErrorResponse(e);\n    }\n  }\n\n  /** Update a session */\n  async update(data: any = {}, query = {}) {\n    try {\n      checkoutState.checkout = (await createOrUpdateCheckout({\n        id: data?.id ? data.id : this.getSessionId(),\n        data,\n        query,\n      })) as Checkout;\n    } catch (e) {\n      // reinitalize if order not found.\n      if (['checkout.not_found'].includes(e?.code)) {\n        clearCheckout();\n        return this.initialize();\n      }\n      console.error(e);\n      throw e;\n    }\n  }\n\n  /** Updates a session with loading status changes. */\n  async loadUpdate(data = {}) {\n    try {\n      updateFormState('FETCH');\n      await this.update(data);\n      updateFormState('RESOLVE');\n    } catch (e) {\n      this.handleErrorResponse(e);\n    }\n  }\n\n  render() {\n    return (\n      <sc-line-items-provider order={checkoutState?.checkout} onScUpdateLineItems={e => this.loadUpdate({ line_items: e.detail as Array<LineItemData> })}>\n        <slot />\n      </sc-line-items-provider>\n    );\n  }\n}\n"]}
{"version":3,"file":"sc-error.js","sourceRoot":"","sources":["../../../../src/components/ui/error/sc-error.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,CAAC,EAAE,KAAK,EAAgB,MAAM,EAAE,KAAK,EAAE,IAAI,EAAE,MAAM,eAAe,CAAC;AACvF,OAAO,EAAE,EAAE,EAAE,MAAM,iBAAiB,CAAC;AAGrC;;;;;;;GAOG;AAKH,MAAM,OAAO,mBAAmB;;;;EAO9B,qDAAqD;EAErD,iBAAiB,CAAC,GAAG;IACnB,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;EAC/B,CAAC;EAED,4CAA4C;EAE5C,gBAAgB,CAAC,CAAC;IAChB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,MAAuB,CAAC;EACzC,CAAC;EAED,oFAAoF;EACpF,eAAe,CAAC,KAAK;IACnB,IAAI,KAAK,CAAC,IAAI,KAAK,8BAA8B,EAAE;MACjD,OAAO,EAAE,CAAC,wCAAwC,EAAE,UAAU,CAAC,CAAC;KACjE;IACD,OAAO,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,OAAO,CAAC;EACxB,CAAC;EAED,oFAAoF;EACpF,YAAY;;IACV,IAAI,MAAA,MAAA,MAAA,IAAI,CAAC,KAAK,0CAAE,iBAAiB,0CAAG,CAAC,CAAC,0CAAE,OAAO,EAAE;MAC/C,OAAO,IAAI,CAAC,eAAe,CAAC,MAAA,MAAA,IAAI,CAAC,KAAK,0CAAE,iBAAiB,0CAAG,CAAC,CAAC,CAAC,CAAC;KACjE;SAAM,IAAI,MAAA,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,KAAK,0CAAE,OAAO,EAAE;MAC/B,OAAO,IAAI,CAAC,eAAe,CAAC,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,KAAK,CAAC,CAAC;KAC1C;IACD,OAAO,EAAE,CAAC;EACZ,CAAC;EAED,MAAM;IACJ,OAAO,CAAC,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC,CAAC,CAAC,CAC7B,gBAAU,WAAW,EAAC,yCAAyC,EAAC,IAAI,EAAC,QAAQ,EAAC,YAAY,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,EAAE;MAC3H,YAAM,IAAI,EAAC,OAAO,IAAE,IAAI,CAAC,YAAY,EAAE,CAAQ,CACtC,CACZ,CAAC,CAAC,CAAC,IAAI,CAAC;EACX,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CACF","sourcesContent":["import { Component, h, Event, EventEmitter, Listen, Watch, Prop } from '@stencil/core';\nimport { __ } from '@wordpress/i18n';\nimport { ResponseError } from '../../../types';\n\n/**\n * @part base - The elements base wrapper.\n * @part icon - The alert icon.\n * @part text - The alert text.\n * @part title - The alert title.\n * @part message - The alert message.\n * @part close - The close icon.\n */\n@Component({\n  tag: 'sc-error',\n  shadow: true,\n})\nexport class ScFormErrorProvider {\n  /** Set the state. */\n  @Event() scUpdateError: EventEmitter<ResponseError>;\n\n  /** Error to display. */\n  @Prop() error: ResponseError | null;\n\n  /** Trigger the error event when an error happens  */\n  @Watch('error')\n  handleErrorUpdate(val) {\n    this.scUpdateError.emit(val);\n  }\n\n  /** Listen for error events in component. */\n  @Listen('scError')\n  handleErrorEvent(e) {\n    this.error = e.detail as ResponseError;\n  }\n\n  /** This filters the error message with some more client friendly error messages. */\n  getErrorMessage(error) {\n    if (error.code === 'order.line_items.price.blank') {\n      return __('This product is no longer purchasable.', 'surecart');\n    }\n    return error?.message;\n  }\n\n  /** First will display validation error, then main error if no validation errors. */\n  errorMessage() {\n    if (this.error?.additional_errors?.[0]?.message) {\n      return this.getErrorMessage(this.error?.additional_errors?.[0]);\n    } else if (this?.error?.message) {\n      return this.getErrorMessage(this?.error);\n    }\n    return '';\n  }\n\n  render() {\n    return !!this.errorMessage() ? (\n      <sc-alert exportparts=\"base, icon, text, title, message, close\" type=\"danger\" scrollOnOpen={true} open={!!this.errorMessage()}>\n        <span slot=\"title\">{this.errorMessage()}</span>\n      </sc-alert>\n    ) : null;\n  }\n}\n"]}
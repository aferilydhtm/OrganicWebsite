{"version":3,"file":"sc-cart-form.js","sourceRoot":"","sources":["../../../../../src/components/controllers/cart/sc-cart-form/sc-cart-form.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Component, h, Prop, State } from '@stencil/core';\nimport { __ } from '@wordpress/i18n';\nimport { Creator, Universe } from 'stencil-wormhole';\n\nimport { convertLineItemsToLineItemData } from '../../../../functions/line-items';\nimport { createOrUpdateCheckout } from '../../../../services/session';\nimport { getOrder, setOrder } from '@store/checkouts';\nimport uiStore from '@store/ui';\nimport { Checkout, LineItemData } from '../../../../types';\n\nconst query = {\n  expand: [\n    'line_items',\n    'line_item.price',\n    'price.product',\n    'customer',\n    'customer.shipping_address',\n    'payment_intent',\n    'discount',\n    'discount.promotion',\n    'discount.coupon',\n    'shipping_address',\n    'tax_identifier',\n  ],\n};\n\n@Component({\n  tag: 'sc-cart-form',\n  styles: 'sc-cart-form { display: inline-block }',\n  shadow: false,\n})\nexport class ScCartForm {\n  private form: HTMLScFormElement;\n\n  /** The quantity */\n  @Prop({ mutable: true }) quantity: number = 1;\n\n  /** The price id to add. */\n  @Prop() priceId: string;\n\n  /** Are we in test or live mode. */\n  @Prop() mode: 'test' | 'live' = 'live';\n\n  /** The form id to use for the cart. */\n  @Prop({ reflect: true }) formId: string;\n\n  @State() order: Checkout;\n\n  /** Is it busy */\n  @State() busy: boolean;\n  @State() error: string;\n\n  /** Find a line item with this price. */\n  getLineItem() {\n    const order = this.getOrder();\n    const lineItem = (order?.line_items?.data || []).find(item => item.price?.id === this.priceId);\n    if (!lineItem?.id) {\n      return false;\n    }\n\n    return {\n      id: lineItem?.id,\n      price_id: lineItem?.price?.id,\n      quantity: lineItem?.quantity,\n    } as LineItemData;\n  }\n\n  getOrder() {\n    return getOrder(this?.formId, this.mode);\n  }\n\n  /** Add the item to cart. */\n  async addToCart() {\n    const { price } = await this.form.getFormJson();\n    try {\n      this.busy = true;\n      // if it's ad_hoc, update the amount. Otherwise increment the quantity.\n      const order = await this.addOrUpdateLineItem({ ...(!!price ? { ad_hoc_amount: parseInt(price as string) || null } : {}) });\n      // store the checkout in localstorage and open the cart\n      setOrder(order, this.formId);\n      uiStore.set('cart', { ...uiStore.state.cart, ...{ open: true } });\n    } catch (e) {\n      console.error(e);\n      this.error = e?.message || __('Something went wrong', 'surecart');\n    } finally {\n      this.busy = false;\n    }\n  }\n\n  async addOrUpdateLineItem(data: any = {}) {\n    // get the current line item from the price id.\n    let lineItem = this.getLineItem() as LineItemData;\n\n    // convert line items response to line items post.\n    let existingData = convertLineItemsToLineItemData(this.getOrder()?.line_items || []);\n\n    // Line item does not exist. Add it.\n    return (await createOrUpdateCheckout({\n      id: this.getOrder()?.id,\n      data: {\n        live_mode: this.mode === 'live',\n        line_items: [\n          ...(existingData || []).map((item: LineItemData) => {\n            // if the price ids match (we have already a line item)\n            if (this.priceId === item?.price_id) {\n              return {\n                ...item,\n                ...(!!data?.ad_hoc_amount ? { ad_hoc_amount: data?.ad_hoc_amount } : {}),\n                quantity: !item?.ad_hoc_amount ? item?.quantity + 1 : 1, // only increase quantity if not ad_hoc.\n              };\n            }\n            // return item.\n            return item;\n          }),\n          // add a line item if one does not exist.\n          ...(!lineItem\n            ? [\n                {\n                  price_id: this.priceId,\n                  ...(!!data?.ad_hoc_amount ? { ad_hoc_amount: data?.ad_hoc_amount } : {}),\n                  quantity: 1,\n                },\n              ]\n            : []),\n        ],\n      },\n      query: {\n        ...query,\n        form_id: this.formId,\n      },\n    })) as Checkout;\n  }\n\n  componentWillLoad() {\n    Universe.create(this as Creator, this.state());\n  }\n\n  state() {\n    return {\n      busy: this.busy,\n      error: this.error,\n      order: this.getOrder(),\n    };\n  }\n\n  render() {\n    return (\n      <sc-form\n        ref={el => (this.form = el as HTMLScFormElement)}\n        onScSubmit={() => {\n          this.addToCart();\n        }}\n      >\n        {this.error && (\n          <sc-alert open={!!this.error} type=\"danger\">\n            <span slot=\"title\">{__('Error', 'surecart')}</span>\n            {this.error}\n          </sc-alert>\n        )}\n        <Universe.Provider state={this.state()}>\n          <slot />\n        </Universe.Provider>\n      </sc-form>\n    );\n  }\n}\n"]}
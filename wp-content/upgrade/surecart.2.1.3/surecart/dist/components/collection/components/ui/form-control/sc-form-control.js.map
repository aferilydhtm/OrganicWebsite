{"version":3,"file":"sc-form-control.js","sourceRoot":"","sources":["../../../../src/components/ui/form-control/sc-form-control.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,MAAM,eAAe,CAAC;AACnE,OAAO,EAAE,YAAY,EAAE,MAAM,kBAAkB,CAAC;AAChD,OAAO,EAAE,KAAK,EAAE,MAAM,+BAA+B,CAAC;AAEtD;;;;;;;GAOG;AAMH,MAAM,OAAO,aAAa;;gBAIsC,QAAQ;;;qBASzC,IAAI;;;;oBAYL,KAAK;;;;;EAYjC,YAAY;;IACV,IAAI,CAAC,YAAY,GAAG,MAAA,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,MAAM,0CAAG,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,IAAI,CAAC,CAAC;EACjD,CAAC;EAED,MAAM;IACJ,OAAO,CACL,WACE,IAAI,EAAC,cAAc,EACnB,KAAK,EAAE;QACL,cAAc,EAAE,IAAI;QACpB,qBAAqB,EAAE,IAAI,CAAC,IAAI,KAAK,OAAO;QAC5C,sBAAsB,EAAE,IAAI,CAAC,IAAI,KAAK,QAAQ;QAC9C,qBAAqB,EAAE,IAAI,CAAC,IAAI,KAAK,OAAO;QAC5C,yBAAyB,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,SAAS;QACzD,6BAA6B,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI;QAC1C,2BAA2B,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ;QAC5C,sBAAsB,EAAC,KAAK,EAAE;OAC/B;MAED,aAAO,IAAI,EAAC,OAAO,EAAC,EAAE,EAAE,IAAI,CAAC,OAAO,EAAE,KAAK,EAAC,qBAAqB,EAAC,OAAO,EAAE,IAAI,CAAC,OAAO,iBAAe,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,MAAM;QACnI,YAAM,IAAI,EAAC,OAAO,IAAE,IAAI,CAAC,KAAK,CAAQ;QACtC,YAAM,IAAI,EAAC,WAAW,GAAQ,CACxB;MACR,WAAK,IAAI,EAAC,OAAO,EAAC,KAAK,EAAC,qBAAqB,IAC1C,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CACrB,kBAAY,WAAW,EAAC,iCAAiC,EAAC,IAAI,EAAE,IAAI,CAAC,YAAY,EAAE,IAAI,EAAC,QAAQ,EAAC,OAAO,EAAE,EAAE,EAAE,MAAM,QAAC,IAAI,QAAC,OAAO,EAAE,GAAG,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;QAC/J,eAAa,CACF,CACd,CAAC,CAAC,CAAC,CACF,eAAa,CACd,CACG;MACL,IAAI,CAAC,IAAI,IAAI,CACZ,WAAK,IAAI,EAAC,WAAW,EAAC,EAAE,EAAE,IAAI,CAAC,MAAM,EAAE,KAAK,EAAC,yBAAyB;QACpE,YAAM,IAAI,EAAC,WAAW,IAAE,IAAI,CAAC,IAAI,CAAQ,CACrC,CACP,CACG,CACP,CAAC;EACJ,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CACF;AAED,YAAY,CAAC,aAAa,EAAE,CAAC,QAAQ,CAAC,EAAE,KAAK,CAAC,CAAC","sourcesContent":["import { Component, h, Prop, Element, Watch } from '@stencil/core';\nimport { openWormhole } from 'stencil-wormhole';\nimport { isRtl } from '../../../functions/page-align';\n\n/**\n * @part form-control - The elements base wrapper.\n * @part label - The label.\n * @part input - The input wrapper.\n * @part help-text - Help text.\n * @part tooltip - Tooltip\n * @part tooltip-text - Tooltip text.\n */\n@Component({\n  tag: 'sc-form-control',\n  styleUrl: 'sc-form-control.scss',\n  shadow: true,\n})\nexport class ScFormControl {\n  @Element() el: HTMLScFormControlElement;\n\n  /** Size of the label */\n  @Prop({ reflect: true }) size: 'small' | 'medium' | 'large' = 'medium';\n\n  /** Name for the input. Used for validation errors. */\n  @Prop() name: string;\n\n  /** Display server-side validation errors. */\n  @Prop() errors: any;\n\n  /** Show the label. */\n  @Prop() showLabel: boolean = true;\n\n  /** Input label. */\n  @Prop() label: string;\n\n  /** Input label id. */\n  @Prop() labelId: string;\n\n  /** Input id. */\n  @Prop() inputId: string;\n\n  /** Whether the input is required. */\n  @Prop() required: boolean = false;\n\n  /** Help text */\n  @Prop() help: string;\n\n  /** Help id */\n  @Prop() helpId: string;\n\n  /** Store the error message */\n  @Prop({ mutable: true }) errorMessage: string;\n\n  @Watch('errors')\n  handleErrors() {\n    this.errorMessage = this?.errors?.[this?.name];\n  }\n\n  render() {\n    return (\n      <div\n        part=\"form-control\"\n        class={{\n          'form-control': true,\n          'form-control--small': this.size === 'small',\n          'form-control--medium': this.size === 'medium',\n          'form-control--large': this.size === 'large',\n          'form-control--has-label': !!this.label && this.showLabel,\n          'form-control--has-help-text': !!this.help,\n          'form-control--is-required': !!this.required,\n          'form-control--is-rtl':isRtl()\n        }}\n      >\n        <label part=\"label\" id={this.labelId} class=\"form-control__label\" htmlFor={this.inputId} aria-hidden={!!this.label ? 'false' : 'true'}>\n          <slot name=\"label\">{this.label}</slot>\n          <slot name=\"label-end\"></slot>\n        </label>\n        <div part=\"input\" class=\"form-control__input\">\n          {!!this.errorMessage ? (\n            <sc-tooltip exportparts=\"base:tooltip, text:tooltip-text\" text={this.errorMessage} type=\"danger\" padding={10} freeze open onClick={() => (this.errorMessage = '')}>\n              <slot></slot>\n            </sc-tooltip>\n          ) : (\n            <slot></slot>\n          )}\n        </div>\n        {this.help && (\n          <div part=\"help-text\" id={this.helpId} class=\"form-control__help-text\">\n            <slot name=\"help-text\">{this.help}</slot>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nopenWormhole(ScFormControl, ['errors'], false);\n"]}
{"version":3,"file":"sc-password-nag.js","sourceRoot":"","sources":["../../../../../src/components/controllers/dashboard/sc-password-nag/sc-password-nag.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Component, Fragment, h, Prop, State, Watch } from '@stencil/core';\nimport apiFetch from '../../../../functions/fetch';\nimport { __ } from '@wordpress/i18n';\n\n@Component({\n  tag: 'sc-password-nag',\n  styleUrl: 'sc-password-nag.css',\n  shadow: true,\n})\nexport class ScPasswordNag {\n  private input: HTMLScInputElement;\n  @Prop({ mutable: true }) open: boolean = true;\n  /** The type of alert. */\n  @Prop({ reflect: true }) type: 'primary' | 'success' | 'info' | 'warning' | 'danger' = 'primary';\n  /** The success url. */\n  @Prop() successUrl: string;\n  /** Set a new password */\n  @State() set: boolean;\n  @State() loading: boolean;\n  @State() error: string;\n  @State() success: boolean;\n\n  /** Ensures strong password validation. */\n  @Prop({ reflect: true }) enableValidation = true;\n\n  @Watch('set')\n  handleSetChange() {\n    setTimeout(() => {\n      this.input && this.input.triggerFocus();\n    }, 50);\n  }\n\n  /** Dismiss the form. */\n  async dismiss() {\n    this.loading = true;\n    this.error = '';\n    try {\n      await apiFetch({\n        path: `wp/v2/users/me`,\n        method: 'PATCH',\n        data: {\n          meta: {\n            default_password_nag: false,\n          },\n        },\n      });\n      this.open = false;\n    } catch (e) {\n      this.error = e?.message || __('Something went wrong', 'surecart');\n      this.loading = false;\n    }\n  }\n\n  validatePassword(password: string) {\n    const regex = new RegExp('^(?=.*?[#?!@$%^&*-]).{6,}$');\n    if (regex.test(password)) return true;\n    return false;\n  }\n\n  /** Handle password submit. */\n  async handleSubmit(e) {\n    this.loading = true;\n    this.error = '';\n    try {\n      const { password, password_confirm } = await e.target.getFormJson();\n      if (password !== password_confirm) {\n        throw { message: __('Passwords do not match.', 'surecart') };\n      }\n      if (this.enableValidation && !this.validatePassword(password)) {\n        throw { message: __('Passwords should at least 6 characters and contain one special character.', 'surecart') };\n      }\n      await apiFetch({\n        path: `wp/v2/users/me`,\n        method: 'PATCH',\n        data: {\n          password,\n          meta: {\n            default_password_nag: false,\n          },\n        },\n      });\n      this.dismiss();\n      this.success = true;\n    } catch (e) {\n      this.error = e?.message || __('Something went wrong', 'surecart');\n      this.loading = false;\n    }\n  }\n\n  render() {\n    if (this.success) {\n      return (\n        <sc-alert type=\"success\" open>\n          <span slot=\"title\">{__('Success!', 'surecart')}</span>\n          {__('You have successfully set your password.', 'surecart')}\n        </sc-alert>\n      );\n    }\n\n    return (\n      <sc-alert type={this.type} open={this.open} exportparts=\"base, icon, text, title, message, close-icon\" style={{ position: 'relative' }}>\n        {!!this.error && this.error}\n        {this.set ? (\n          <sc-dashboard-module class=\"customer-details\">\n            <span slot=\"heading\">{__('Set A Password', 'surecart')} </span>\n            <sc-button type=\"text\" size=\"small\" slot=\"end\" onClick={() => (this.set = false)}>\n              <sc-icon name=\"x\" slot=\"prefix\" />\n              {__('Cancel', 'surecart')}\n            </sc-button>\n            <sc-card>\n              <sc-form onScFormSubmit={e => this.handleSubmit(e)}>\n                <sc-input label={__('New Password', 'surecart')} name=\"password\" type=\"password\" required ref={el => (this.input = el as HTMLScInputElement)} />\n                <sc-input label={__('Confirm New Password', 'surecart')} name=\"password_confirm\" type=\"password\" required />\n                <div>\n                  <sc-button type=\"primary\" full submit busy={this.loading}>\n                    {__('Update Password', 'surecart')}\n                  </sc-button>\n                </div>\n              </sc-form>\n            </sc-card>\n          </sc-dashboard-module>\n        ) : (\n          <Fragment>\n            <slot name=\"title\" slot=\"title\">\n              {__('Reminder', 'surecart')}\n            </slot>\n            <slot>{__('You have not yet set a password. Please set a password for your account.', 'surecart')}</slot>\n            <sc-flex justify-content=\"flex-start\">\n              <sc-button size=\"small\" type=\"primary\" onClick={() => (this.set = true)}>\n                {__('Set A Password', 'surecart')}\n              </sc-button>\n              <sc-button size=\"small\" type=\"text\" onClick={() => this.dismiss()}>\n                {__('Dismiss', 'surecart')}\n              </sc-button>\n            </sc-flex>\n          </Fragment>\n        )}\n        {this.loading && <sc-block-ui spinner></sc-block-ui>}\n      </sc-alert>\n    );\n  }\n}\n"]}
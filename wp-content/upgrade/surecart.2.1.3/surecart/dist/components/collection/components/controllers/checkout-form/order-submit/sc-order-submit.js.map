{"version":3,"file":"sc-order-submit.js","sourceRoot":"","sources":["../../../../../src/components/controllers/checkout-form/order-submit/sc-order-submit.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Component, Fragment, h, Prop } from '@stencil/core';\nimport { checkoutIsLocked } from '@store/checkout/getters';\nimport { availableProcessors } from '@store/processors/getters';\nimport { state as selectedProcessor } from '@store/selected-processor';\nimport { __ } from '@wordpress/i18n';\nimport { openWormhole } from 'stencil-wormhole';\n\nimport { getProcessorData } from '../../../../functions/processor';\nimport { Checkout, Processor, ProcessorName } from '../../../../types';\n\n@Component({\n  tag: 'sc-order-submit',\n  styleUrl: 'sc-order-submit.scss',\n  shadow: false,\n})\nexport class ScOrderSubmit {\n  /** Is the order busy */\n  @Prop() busy: boolean;\n\n  /** Is the order loading. */\n  @Prop() loading: boolean;\n\n  /** Is the order paying. */\n  @Prop() paying: boolean;\n\n  /** The button type. */\n  @Prop({ reflect: true }) type: 'default' | 'primary' | 'success' | 'info' | 'warning' | 'danger' | 'text' | 'link' = 'primary';\n\n  /** The button's size. */\n  @Prop({ reflect: true }) size: 'small' | 'medium' | 'large' = 'medium';\n\n  /** Show a full-width button. */\n  @Prop() full: boolean = true;\n\n  /** Icon to show. */\n  @Prop() icon: string;\n\n  /** Show the total. */\n  @Prop() showTotal: boolean;\n\n  /** Is this created in \"test\" mode */\n  @Prop() mode: 'test' | 'live' = 'live';\n\n  /** Keys and secrets for processors. */\n  @Prop() processors: Processor[];\n\n  /** The current order. */\n  @Prop() order: Checkout;\n\n  /** Currency Code */\n  @Prop() currencyCode: string = 'usd';\n\n  /** The selected processor. */\n  @Prop() processor: ProcessorName;\n\n  /** Secure */\n  @Prop() secureNoticeText: string;\n\n  /** Show the secure notice */\n  @Prop() secureNotice: boolean = true;\n\n  renderPayPalButton(buttons) {\n    const { client_id, account_id, merchant_initiated_enabled } = getProcessorData(availableProcessors(), 'paypal', this.mode);\n    if (!client_id && !account_id) return null;\n\n    return (\n      <sc-paypal-buttons\n        buttons={buttons}\n        busy={this.busy || checkoutIsLocked()}\n        mode={this.mode}\n        order={this.order}\n        merchantInitiated={merchant_initiated_enabled}\n        currency-code={this.currencyCode}\n        client-id={client_id}\n        merchant-id={account_id}\n        label=\"checkout\"\n        color=\"blue\"\n      ></sc-paypal-buttons>\n    );\n  }\n\n  render() {\n    return (\n      <Fragment>\n        {selectedProcessor.id === 'paypal' && !selectedProcessor?.method && this.renderPayPalButton(['paypal'])}\n        {selectedProcessor.id === 'paypal' && selectedProcessor?.method === 'card' && this.renderPayPalButton(['card'])}\n        <sc-button\n          hidden={['paypal', 'paypal-card'].includes(selectedProcessor.id)}\n          submit\n          type={this.type}\n          size={this.size}\n          full={this.full}\n          loading={this.loading || this.paying}\n          disabled={this.loading || this.paying || this.busy || checkoutIsLocked()}\n        >\n          {!!this.icon && <sc-icon name={this.icon} slot=\"prefix\"></sc-icon>}\n          <slot>{__('Purchase', 'surecart')}</slot>\n          {this.showTotal && (\n            <span>\n              {'\\u00A0'}\n              <sc-total></sc-total>\n            </span>\n          )}\n        </sc-button>\n        {this.secureNotice && location.protocol === 'https:' && (\n          <div class=\"sc-secure-notice\">\n            <sc-secure-notice>{this.secureNoticeText || __('This is a secure, encrypted payment.', 'surecart')}</sc-secure-notice>\n          </div>\n        )}\n      </Fragment>\n    );\n  }\n}\nopenWormhole(ScOrderSubmit, ['busy', 'loading', 'paying', 'processors', 'processor', 'mode', 'currencyCode', 'order'], false);\n"]}
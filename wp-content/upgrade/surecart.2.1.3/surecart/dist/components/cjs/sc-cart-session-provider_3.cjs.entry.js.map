{"file":"sc-cart-session-provider.sc-drawer.sc-error.entry.cjs.js","mappings":"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","names":["updateCheckout","h","setDefaultAnimation"],"sources":["./src/components/providers/cart-session-provider/sc-cart-session-provider.tsx","./src/components/ui/sc-drawer/sc-drawer.css?tag=sc-drawer&encapsulation=shadow","./src/components/ui/sc-drawer/sc-drawer.tsx","./src/components/ui/error/sc-error.tsx"],"sourcesContent":["import { Component, Element, Event, EventEmitter, h, Listen, Prop, State, Watch } from '@stencil/core';\nimport { __ } from '@wordpress/i18n';\n\nimport { updateCheckout } from '../../../services/session';\nimport { Checkout, LineItemData } from '../../../types';\n\n@Component({\n  tag: 'sc-cart-session-provider',\n  shadow: true,\n})\nexport class ScCartSessionProvider {\n  /** Element */\n  @Element() el: HTMLElement;\n\n  /** Order Object */\n  @Prop() order: Checkout;\n\n  /** Update line items event */\n  @Event() scUpdateOrderState: EventEmitter<Checkout>;\n\n  /** Error event */\n  @Event() scError: EventEmitter<{ message: string; code?: string; data?: any; additional_errors?: any } | {}>;\n\n  /** Set the state */\n  @Event() scSetState: EventEmitter<'loading' | 'busy' | 'navigating' | 'idle'>;\n\n  /** Holds the checkout session to update. */\n  @State() session: Checkout;\n\n  /** Sync this session back to parent. */\n  @Watch('session')\n  handleSessionUpdate(val) {\n    this.scUpdateOrderState.emit(val);\n  }\n\n  @Listen('scUpdateOrder')\n  handleUpdateSession(e) {\n    const { data, options } = e.detail;\n    if (options?.silent) {\n      this.update(data);\n    } else {\n      this.loadUpdate(data);\n    }\n  }\n\n  /** Handles coupon updates. */\n  @Listen('scApplyCoupon')\n  async handleCouponApply(e) {\n    const promotion_code = e.detail;\n    this.scError.emit({});\n    this.loadUpdate({\n      discount: {\n        ...(promotion_code ? { promotion_code } : {}),\n      },\n    });\n  }\n\n  /** Handle the error response. */\n  handleErrorResponse(e) {\n    if (e?.code === 'readonly' || e?.additional_errors?.[0]?.code === 'checkout.customer.account_mismatch') {\n      this.scUpdateOrderState.emit(null);\n    }\n\n    // expired\n    if (e?.code === 'rest_cookie_invalid_nonce') {\n      this.scSetState.emit('idle');\n      return;\n    }\n\n    // something went wrong\n    if (e?.message) {\n      this.scError.emit(e);\n    }\n\n    // handle curl timeout errors.\n    if (e?.code === 'http_request_failed') {\n      this.scError.emit({ message: 'Something went wrong. Please reload the page and try again.' });\n    }\n\n    this.scSetState.emit('idle');\n  }\n\n  /** Fetch a session. */\n  async fetch(args = {}) {\n    this.loadUpdate({ status: 'draft', ...args });\n  }\n\n  /** Update a the order */\n  async update(data = {}, query = {}) {\n    try {\n      this.session = (await updateCheckout({\n        id: this.order?.id,\n        data: {\n          ...data,\n        },\n        query: {\n          ...query,\n        },\n      })) as Checkout;\n    } catch (e) {\n      console.error(e);\n      throw e;\n    }\n  }\n\n  /** Updates a session with loading status changes. */\n  async loadUpdate(data = {}) {\n    try {\n      this.scSetState.emit('busy');\n      await this.update(data);\n      this.scSetState.emit('idle');\n    } catch (e) {\n      this.handleErrorResponse(e);\n    }\n  }\n\n  render() {\n    return (\n      <sc-line-items-provider order={this.order} onScUpdateLineItems={e => this.loadUpdate({ line_items: e.detail as Array<LineItemData> })}>\n        <slot />\n      </sc-line-items-provider>\n    );\n  }\n}\n",":host {\n  display: contents;\n}\n.drawer {\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  pointer-events: none;\n  overflow: hidden;\n  font-family: var(--sc-font-sans);\n  font-weight: var(--sc-font-weight-normal);\n}\n.drawer--contained {\n  position: absolute;\n  z-index: initial;\n}\n.drawer--fixed {\n  position: fixed;\n  z-index: var(--sc-z-index-drawer);\n}\n.drawer__panel {\n  position: absolute;\n  display: flex;\n  flex-direction: column;\n  z-index: 2;\n  max-width: 100%;\n  max-height: 100%;\n  background-color: var(--sc-panel-background-color);\n  box-shadow: var(--sc-shadow-x-large);\n  transition: var(--sc-transition-medium) transform;\n  overflow: auto;\n  pointer-events: all;\n}\n.drawer__panel:focus {\n  outline: none;\n}\n.drawer--top .drawer__panel {\n  top: 0;\n  right: auto;\n  bottom: auto;\n  left: 0;\n  width: 100%;\n  height: var(--sc-drawer-size, 400px);\n}\n.drawer--end .drawer__panel {\n  top: 0;\n  right: 0;\n  bottom: auto;\n  left: auto;\n  width: 100%;\n  max-width: var(--sc-drawer-size, 400px);\n  height: 100%;\n}\n.drawer--bottom .drawer__panel {\n  top: auto;\n  right: auto;\n  bottom: 0;\n  left: 0;\n  width: 100%;\n  height: var(--sc-drawer-size, 400px);\n}\n.drawer--start .drawer__panel {\n  top: 0;\n  right: auto;\n  bottom: auto;\n  left: 0;\n  width: var(--sc-drawer-size, 400px);\n  height: 100%;\n}\n.drawer__header {\n  display: flex;\n  align-items: center;\n  padding: var(--sc-drawer-header-spacing);\n  border-bottom: var(--sc-drawer-border);\n}\n\n.drawer__title {\n  flex: 1 1 auto;\n  font: inherit;\n  font-size: var(--sc-font-size-large);\n  line-height: var(--sc-line-height-dense);\n  margin: 0;\n}\n.drawer__close {\n  flex: 0 0 auto;\n  display: flex;\n  align-items: center;\n  font-size: var(--sc-font-size-x-large);\n  color: var(--sc-color-gray-500);\n  cursor: pointer;\n}\n.drawer__body {\n  flex: 1 1 auto;\n}\n\n\n.drawer--has-footer .drawer__footer {\n  border-top: var(--sc-drawer-border);\n  padding: var(--sc-drawer-footer-spacing);\n}\n\n.drawer__overlay {\n  display: block;\n  position: fixed;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  background-color: var(--sc-overlay-background-color);\n  pointer-events: all;\n}\n.drawer--contained .drawer__overlay {\n  position: absolute;\n}\n","import { Component, Element, Event, EventEmitter, h, Prop, Watch } from '@stencil/core';\nimport { __ } from '@wordpress/i18n';\n\nimport { animateTo, stopAnimations } from '../../../functions/animate';\nimport { getAnimation, setDefaultAnimation } from '../../../functions/animation-registry';\n\n@Component({\n  tag: 'sc-drawer',\n  styleUrl: 'sc-drawer.css',\n  shadow: true,\n})\nexport class ScDrawer {\n  @Element() el: HTMLScDrawerElement;\n  private drawer: HTMLElement;\n  private panel: HTMLElement;\n  private overlay: HTMLElement;\n\n  private originalTrigger: HTMLElement | null;\n\n  @Event({ cancelable: true }) scInitialFocus: EventEmitter<void>;\n  @Event({ cancelable: true }) scRequestClose: EventEmitter<'close-button' | 'keyboard' | 'overlay'>;\n  @Event() scShow: EventEmitter<void>;\n  @Event() scHide: EventEmitter<void>;\n  @Event() scAfterShow: EventEmitter<void>;\n  @Event() scAfterHide: EventEmitter<void>;\n\n  /** Indicates whether or not the drawer is open. You can use this in lieu of the show/hide methods. */\n  @Prop({ reflect: true }) open: boolean = false;\n\n  /**\n   * The drawer's label as displayed in the header. You should always include a relevant label even when using\n   * `no-header`, as it is required for proper accessibility.\n   */\n  @Prop({ reflect: true }) label = '';\n\n  /** The direction from which the drawer will open. */\n  @Prop({ reflect: true }) placement: 'top' | 'end' | 'bottom' | 'start' = 'end';\n\n  /**\n   * By default, the drawer slides out of its containing block (usually the viewport). To make the drawer slide out of\n   * its parent element, set this prop and add `position: relative` to the parent.\n   */\n  @Prop({ reflect: true }) contained: boolean = false;\n\n  /**\n   * Removes the header. This will also remove the default close button, so please ensure you provide an easy,\n   * accessible way for users to dismiss the drawer.\n   */\n  @Prop({ attribute: 'no-header', reflect: true }) noHeader: boolean = false;\n\n  componentDidLoad() {\n    this.drawer.hidden = !this.open;\n    if (this.open && !this.contained) {\n      this.lockBodyScrolling();\n    }\n  }\n\n  disconnectedCallback() {\n    this.unLockBodyScrolling();\n  }\n\n  lockBodyScrolling() {\n    document.body.classList.add('sc-scroll-lock');\n  }\n\n  unLockBodyScrolling() {\n    document.body.classList.remove('sc-scroll-lock');\n  }\n\n  /** Shows the drawer. */\n  async show() {\n    if (this.open) {\n      return undefined;\n    }\n    this.open = true;\n  }\n\n  /** Hides the drawer */\n  async hide() {\n    if (!this.open) {\n      return undefined;\n    }\n    this.open = false;\n  }\n\n  private requestClose(source: 'close-button' | 'keyboard' | 'overlay') {\n    const slRequestClose = this.scRequestClose.emit(source);\n\n    if (slRequestClose.defaultPrevented) {\n      const animation = getAnimation(this.el, 'drawer.denyClose');\n      animateTo(this.panel, animation.keyframes, animation.options);\n      return;\n    }\n\n    this.hide();\n  }\n\n  handleKeyDown(event: KeyboardEvent) {\n    if (event.key === 'Escape') {\n      event.stopPropagation();\n      this.requestClose('keyboard');\n    }\n  }\n\n  @Watch('open')\n  async handleOpenChange() {\n    if (this.open) {\n      this.scShow.emit();\n      this.originalTrigger = document.activeElement as HTMLElement;\n\n      // Lock body scrolling only if the drawer isn't contained\n      if (!this.contained) {\n        this.lockBodyScrolling();\n      }\n\n      // When the drawer is shown, Safari will attempt to set focus on whatever element has autofocus. This causes the\n      // drawer's animation to jitter, so we'll temporarily remove the attribute, call `focus({ preventScroll: true })`\n      // ourselves, and add the attribute back afterwards.\n      //\n      // Related: https://github.com/shoelace-style/shoelace/issues/693\n      //\n      const autoFocusTarget = this.el.querySelector('[autofocus]');\n      if (autoFocusTarget) {\n        autoFocusTarget.removeAttribute('autofocus');\n      }\n\n      await Promise.all([stopAnimations(this.drawer), stopAnimations(this.overlay)]);\n      this.drawer.hidden = false;\n\n      // Set initial focus\n      requestAnimationFrame(() => {\n        const slInitialFocus = this.scInitialFocus.emit();\n\n        if (!slInitialFocus.defaultPrevented) {\n          // Set focus to the autofocus target and restore the attribute\n          if (autoFocusTarget) {\n            (autoFocusTarget as HTMLInputElement).focus({ preventScroll: true });\n          } else {\n            this.panel.focus({ preventScroll: true });\n          }\n        }\n\n        // Restore the autofocus attribute\n        if (autoFocusTarget) {\n          autoFocusTarget.setAttribute('autofocus', '');\n        }\n      });\n\n      const panelAnimation = getAnimation(this.el, `drawer.show${this.placement.charAt(0).toUpperCase() + this.placement.slice(1)}`);\n      const overlayAnimation = getAnimation(this.el, 'drawer.overlay.show');\n      await Promise.all([animateTo(this.panel, panelAnimation.keyframes, panelAnimation.options), animateTo(this.overlay, overlayAnimation.keyframes, overlayAnimation.options)]);\n\n      this.scAfterShow.emit();\n    } else {\n      // Hide\n      this.scHide.emit();\n      this.unLockBodyScrolling();\n\n      await Promise.all([stopAnimations(this.drawer), stopAnimations(this.overlay)]);\n      const panelAnimation = getAnimation(this.el, `drawer.hide${this.placement.charAt(0).toUpperCase() + this.placement.slice(1)}`);\n      const overlayAnimation = getAnimation(this.el, 'drawer.overlay.hide');\n      await Promise.all([animateTo(this.panel, panelAnimation.keyframes, panelAnimation.options), animateTo(this.overlay, overlayAnimation.keyframes, overlayAnimation.options)]);\n\n      this.drawer.hidden = true;\n\n      // Restore focus to the original trigger\n      const trigger = this.originalTrigger;\n      if (typeof trigger?.focus === 'function') {\n        setTimeout(() => trigger.focus());\n      }\n\n      this.scAfterHide.emit();\n    }\n  }\n\n  render() {\n    return (\n      <div\n        part=\"base\"\n        class={{\n          'drawer': true,\n          'drawer--open': this.open,\n          'drawer--top': this.placement === 'top',\n          'drawer--end': this.placement === 'end',\n          'drawer--bottom': this.placement === 'bottom',\n          'drawer--start': this.placement === 'start',\n          'drawer--contained': this.contained,\n          'drawer--fixed': !this.contained,\n          'drawer--has-footer': this.el.querySelector('[slot=\"footer\"]') !== null,\n        }}\n        ref={el => (this.drawer = el as HTMLElement)}\n        onKeyDown={(e: KeyboardEvent) => this.handleKeyDown(e)}\n      >\n        <div part=\"overlay\" class=\"drawer__overlay\" onClick={() => this.requestClose('overlay')} tabindex=\"-1\" ref={el => (this.overlay = el as HTMLElement)}></div>\n        <div\n          part=\"panel\"\n          class=\"drawer__panel\"\n          role=\"dialog\"\n          aria-modal=\"true\"\n          aria-hidden={this.open ? 'false' : 'true'}\n          aria-label={this.noHeader ? this.label : undefined}\n          aria-labelledby={!this.noHeader ? 'title' : undefined}\n          tabindex=\"0\"\n          ref={el => (this.panel = el as HTMLElement)}\n        >\n          {!this.noHeader && (\n            <header part=\"header\">\n              <slot name=\"header\">\n                <div class=\"drawer__header\">\n                  <h2 part=\"title\" class=\"drawer__title\" id=\"title\">\n                    {/** If there's no label, use an invisible character to prevent the header from collapsing */}\n                    <slot name=\"label\">{this.label.length > 0 ? this.label : ' '} </slot>\n                  </h2>\n                  <sc-icon\n                    part=\"close-button\"\n                    exportparts=\"base:close-button__base\"\n                    class=\"drawer__close\"\n                    name=\"x\"\n                    label={\n                      /** translators: Close this modal window. */\n                      __('Close', 'surecart')\n                    }\n                    onClick={() => this.requestClose('close-button')}\n                  ></sc-icon>\n                </div>\n              </slot>\n            </header>\n          )}\n          <footer part=\"header-suffix\" class=\"drawer__header-suffix\">\n            <slot name=\"header-suffix\"></slot>\n          </footer>\n          <div part=\"body\" class=\"drawer__body\">\n            <slot></slot>\n          </div>\n          <footer part=\"footer\" class=\"drawer__footer\">\n            <slot name=\"footer\"></slot>\n          </footer>\n        </div>\n      </div>\n    );\n  }\n}\n\n// Top\nsetDefaultAnimation('drawer.showTop', {\n  keyframes: [\n    { opacity: 0, transform: 'translateY(-100%)' },\n    { opacity: 1, transform: 'translateY(0)' },\n  ],\n  options: { duration: 250, easing: 'ease' },\n});\n\nsetDefaultAnimation('drawer.hideTop', {\n  keyframes: [\n    { opacity: 1, transform: 'translateY(0)' },\n    { opacity: 0, transform: 'translateY(-100%)' },\n  ],\n  options: { duration: 250, easing: 'ease' },\n});\n\n// End\nsetDefaultAnimation('drawer.showEnd', {\n  keyframes: [\n    { opacity: 0, transform: 'translateX(100%)' },\n    { opacity: 1, transform: 'translateX(0)' },\n  ],\n  options: { duration: 250, easing: 'ease' },\n});\n\nsetDefaultAnimation('drawer.hideEnd', {\n  keyframes: [\n    { opacity: 1, transform: 'translateX(0)' },\n    { opacity: 0, transform: 'translateX(100%)' },\n  ],\n  options: { duration: 250, easing: 'ease' },\n});\n\n// Bottom\nsetDefaultAnimation('drawer.showBottom', {\n  keyframes: [\n    { opacity: 0, transform: 'translateY(100%)' },\n    { opacity: 1, transform: 'translateY(0)' },\n  ],\n  options: { duration: 250, easing: 'ease' },\n});\n\nsetDefaultAnimation('drawer.hideBottom', {\n  keyframes: [\n    { opacity: 1, transform: 'translateY(0)' },\n    { opacity: 0, transform: 'translateY(100%)' },\n  ],\n  options: { duration: 250, easing: 'ease' },\n});\n\n// Start\nsetDefaultAnimation('drawer.showStart', {\n  keyframes: [\n    { opacity: 0, transform: 'translateX(-100%)' },\n    { opacity: 1, transform: 'translateX(0)' },\n  ],\n  options: { duration: 250, easing: 'ease' },\n});\n\nsetDefaultAnimation('drawer.hideStart', {\n  keyframes: [\n    { opacity: 1, transform: 'translateX(0)' },\n    { opacity: 0, transform: 'translateX(-100%)' },\n  ],\n  options: { duration: 250, easing: 'ease' },\n});\n\n// Deny close\nsetDefaultAnimation('drawer.denyClose', {\n  keyframes: [{ transform: 'scale(1)' }, { transform: 'scale(1.01)' }, { transform: 'scale(1)' }],\n  options: { duration: 250 },\n});\n\n// Overlay\nsetDefaultAnimation('drawer.overlay.show', {\n  keyframes: [{ opacity: 0 }, { opacity: 1 }],\n  options: { duration: 250, easing: 'ease' },\n});\n\nsetDefaultAnimation('drawer.overlay.hide', {\n  keyframes: [{ opacity: 1 }, { opacity: 0 }],\n  options: { duration: 250, easing: 'ease' },\n});\n","import { Component, h, Event, EventEmitter, Listen, Watch, Prop } from '@stencil/core';\nimport { __ } from '@wordpress/i18n';\nimport { ResponseError } from '../../../types';\n\n/**\n * @part base - The elements base wrapper.\n * @part icon - The alert icon.\n * @part text - The alert text.\n * @part title - The alert title.\n * @part message - The alert message.\n * @part close - The close icon.\n */\n@Component({\n  tag: 'sc-error',\n  shadow: true,\n})\nexport class ScFormErrorProvider {\n  /** Set the state. */\n  @Event() scUpdateError: EventEmitter<ResponseError>;\n\n  /** Error to display. */\n  @Prop() error: ResponseError | null;\n\n  /** Trigger the error event when an error happens  */\n  @Watch('error')\n  handleErrorUpdate(val) {\n    this.scUpdateError.emit(val);\n  }\n\n  /** Listen for error events in component. */\n  @Listen('scError')\n  handleErrorEvent(e) {\n    this.error = e.detail as ResponseError;\n  }\n\n  /** This filters the error message with some more client friendly error messages. */\n  getErrorMessage(error) {\n    if (error.code === 'order.line_items.price.blank') {\n      return __('This product is no longer purchasable.', 'surecart');\n    }\n    return error?.message;\n  }\n\n  /** First will display validation error, then main error if no validation errors. */\n  errorMessage() {\n    if (this.error?.additional_errors?.[0]?.message) {\n      return this.getErrorMessage(this.error?.additional_errors?.[0]);\n    } else if (this?.error?.message) {\n      return this.getErrorMessage(this?.error);\n    }\n    return '';\n  }\n\n  render() {\n    return !!this.errorMessage() ? (\n      <sc-alert exportparts=\"base, icon, text, title, message, close\" type=\"danger\" scrollOnOpen={true} open={!!this.errorMessage()}>\n        <span slot=\"title\">{this.errorMessage()}</span>\n      </sc-alert>\n    ) : null;\n  }\n}\n"],"version":3}
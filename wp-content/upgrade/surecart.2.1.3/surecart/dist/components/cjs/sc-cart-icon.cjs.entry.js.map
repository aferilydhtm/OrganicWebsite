{"file":"sc-cart-icon.entry.cjs.js","mappings":";;;;;;;;;;AAAA,MAAM,aAAa,GAAG,wvCAAwvC;;MCcjwC,UAAU;;;gBAEE,cAAc;iBAGb,CAAC;;gBAMO,MAAM;;EAEtC,KAAK;IACH,OAAOA,iBAAQ,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;GACzC;;EAGD,aAAa;;IACX,MAAM,KAAK,GAAG,MAAA,MAAA,IAAI,CAAC,KAAK,EAAE,0CAAE,UAAU,0CAAE,IAAI,CAAC;IAC7C,IAAI,KAAK,GAAG,CAAC,CAAC;IACd,CAAC,KAAK,IAAI,EAAE,EAAE,OAAO,CAAC,IAAI;MACxB,KAAK,GAAG,KAAK,IAAG,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,QAAQ,CAAA,CAAC;KAChC,CAAC,CAAC;IACH,OAAO,KAAK,CAAC;GACd;EAED,MAAM;IACJ,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,EAAE;MACjB,OAAO,IAAI,CAAC;KACb;IACD,QACEC,iBAAK,KAAK,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,EAAE,IAAI,EAAC,MAAM,EAAC,OAAO,EAAE,MAAMC,QAAO,CAAC,GAAG,CAAC,MAAM,EAAE,EAAE,GAAGA,QAAO,CAAC,KAAK,CAAC,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,CAACA,QAAO,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,EAAE,EAAE,CAAC,IAC1ID,iBAAK,KAAK,EAAC,iBAAiB,EAAC,IAAI,EAAC,WAAW,IAC3CA,iBAAK,KAAK,EAAE,EAAE,aAAa,EAAE,IAAI,EAAE,IAAG,IAAI,CAAC,aAAa,EAAE,CAAO,EACjEA,sBACEA,qBAAS,WAAW,EAAC,iBAAiB,EAAC,IAAI,EAAE,IAAI,CAAC,IAAI,GAAY,CAC7D,CACH,CACF,EACN;GACH;;;;;;","names":["getOrder","h","uiStore"],"sources":["./src/components/ui/sc-cart-icon/sc-cart-icon.scss?tag=sc-cart-icon&encapsulation=shadow","./src/components/ui/sc-cart-icon/sc-cart-icon.tsx"],"sourcesContent":[":host {\n  display: block;\n}\n\n.cart {\n  position: fixed;\n  bottom: var(--sc-cart-icon-bottom, 30px);\n  right: var(--sc-cart-icon-right, 30px);\n  left: var(--sc-cart-icon-left, auto);\n  top: var(--sc-cart-icon-top, auto);\n  background: var(--sc-cart-icon-background, var(--sc-color-primary-500));\n  border-radius: var(--sc-cart-icon-border-radius, var(--sc-input-border-radius-medium));\n  width: var(--sc-cart-icon-width, 60px);\n  height: var(--sc-cart-icon-height, 60px);\n  color: var(--sc-cart-icon-color, var(--sc-color-primary-text, var(--sc-color-white)));\n  font-family: var(--sc-cart-font-family, var(--sc-input-font-family));\n  font-weight: var(--sc-font-weight-semibold);\n  transition: opacity var(--sc-transition-medium) ease;\n  box-shadow: var(--sc-shadow-small);\n  cursor: pointer;\n\n  &:hover {\n    opacity: 0.8;\n  }\n\n  &__container {\n    font-size: 24px;\n    position: relative;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    text-align: center;\n    height: 100%;\n  }\n\n  &__counter {\n    position: absolute;\n    top: -8px;\n    left: auto;\n    bottom: auto;\n    right: -8px;\n    font-size: 12px;\n    border-radius: var(--sc-cart-counter-border-radius, 9999px);\n    color: var(--sc-cart-counter-color, var(--sc-color-white));\n    background: var(--sc-cart-counter-background, var(--sc-color-gray-900));\n    box-shadow: var(--sc-cart-icon-box-shadow, var(--sc-shadow-x-large));\n    padding: 4px 10px;\n    line-height: 18px;\n    z-index: 1;\n  }\n}\n","import { Component, h, Prop } from '@stencil/core';\nimport { getOrder } from '@store/checkouts';\nimport uiStore from '@store/ui';\n\n/**\n * @part base - The elements base wrapper.\n * @part container - The container.\n * @part icon__base - The icon base wrapper.\n */\n@Component({\n  tag: 'sc-cart-icon',\n  styleUrl: 'sc-cart-icon.scss',\n  shadow: true,\n})\nexport class ScCartIcon {\n  /** The icon to show. */\n  @Prop() icon: string = 'shopping-bag';\n\n  /** The count to show in the cart icon. */\n  @Prop() count: number = 0;\n\n  /** The form id to use for the cart. */\n  @Prop({ reflect: true }) formId: string;\n\n  /** Are we in test or live mode. */\n  @Prop() mode: 'test' | 'live' = 'live';\n\n  order() {\n    return getOrder(this.formId, this.mode);\n  }\n\n  /** Count the number of items in the cart. */\n  getItemsCount() {\n    const items = this.order()?.line_items?.data;\n    let count = 0;\n    (items || []).forEach(item => {\n      count = count + item?.quantity;\n    });\n    return count;\n  }\n\n  render() {\n    if (!this.order()) {\n      return null;\n    }\n    return (\n      <div class={{ cart: true }} part=\"base\" onClick={() => uiStore.set('cart', { ...uiStore.state.cart, ...{ open: !uiStore.state.cart.open } })}>\n        <div class=\"cart__container\" part=\"container\">\n          <div class={{ cart__counter: true }}>{this.getItemsCount()}</div>\n          <slot>\n            <sc-icon exportparts=\"base:icon__base\" name={this.icon}></sc-icon>\n          </slot>\n        </div>\n      </div>\n    );\n  }\n}\n"],"version":3}
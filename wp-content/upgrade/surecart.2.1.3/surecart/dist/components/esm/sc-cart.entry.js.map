{"file":"sc-cart.entry.js","mappings":"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","names":["uiStore","checkoutState"],"sources":["./src/components/controllers/cart/sc-cart/sc-cart.scss?tag=sc-cart&encapsulation=shadow","./src/components/controllers/cart/sc-cart/sc-cart.tsx"],"sourcesContent":[":host {\n  --sc-drawer-header-spacing: var(--sc-spacing-large);\n  --sc-drawer-body-spacing: var(--sc-spacing-large);\n  --sc-drawer-footer-spacing: var(--sc-spacing-large);\n}\n\n.cart {\n  font-size: 16px;\n}\n\n.cart__header {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  width: 100%;\n  font-size: 1em;\n}\n.cart__close {\n  opacity: 0.75;\n  transition: opacity 0.25s ease;\n  cursor: pointer;\n\n  &:hover {\n    opacity: 1;\n  }\n}\n::slotted(*) {\n  padding: var(--sc-drawer-header-spacing);\n  background:  var(--sc-panel-background-color);\n  position: relative;\n}\n\n::slotted(sc-line-items) {\n  flex: 1 1 auto;\n  overflow: auto;\n  -webkit-overflow-scrolling: touch;\n  min-height: 200px;\n}\n::slotted(:last-child) {\n  border-bottom: 0 !important;\n}\n\nsc-drawer::part(body) {\n  display: flex;\n  flex-direction: column;\n  box-sizing: border-box;\n  padding:0;\n  overflow: hidden;\n}\n","import { Component, Fragment, h, Listen, Prop, State, Watch } from '@stencil/core';\nimport apiFetch from '../../../../functions/fetch';\nimport { __ } from '@wordpress/i18n';\nimport { addQueryArgs } from '@wordpress/url';\nimport { Creator, Universe } from 'stencil-wormhole';\nimport { baseUrl } from '../../../../services/session';\nimport { getOrder, setOrder } from '@store/checkouts';\nimport { state as checkoutState } from '@store/checkout';\nimport uiStore from '@store/ui';\nimport { expand } from '../../../../services/session';\nimport { Checkout, ResponseError } from '../../../../types';\n\n@Component({\n  tag: 'sc-cart',\n  styleUrl: 'sc-cart.scss',\n  shadow: true,\n})\nexport class ScCart {\n  /** Is this open or closed? */\n  @State() open: boolean = null;\n\n  /** The form id to use for the cart. */\n  @Prop({ reflect: true }) formId: string;\n\n  /** The header for the popout. */\n  @Prop() header: string;\n\n  @Prop() checkoutLink: string;\n\n  /** The template for the cart to inject when opened. */\n  @Prop() cartTemplate: string;\n\n  /** Are we in test or live mode. */\n  @Prop() mode: 'test' | 'live' = 'live';\n\n  /** The checkout url for the button. */\n  @Prop() checkoutUrl: string;\n\n  /** Should we force show the cart, even if there's a form on the page? */\n  @Prop() alwaysShow: boolean;\n\n  /** Whether the floating button should be visible */\n  @Prop() floatingIconEnabled: boolean = true;\n\n  /** The current UI state. */\n  @State() uiState: 'loading' | 'busy' | 'navigating' | 'idle' = 'idle';\n\n  /** Error state. */\n  @State() error: ResponseError | null;\n\n  @Watch('open')\n  handleOpenChange() {\n    uiStore.set('cart', { ...uiStore.state.cart, ...{ open: this.open } });\n    if (this.open === true) {\n      this.fetchOrder();\n    }\n  }\n\n  order() {\n    return getOrder(this.formId, this.mode);\n  }\n\n  setOrder(data) {\n    setOrder(data, this.formId);\n  }\n\n  /**\n   * Search for the sc-checkout component on a page to make sure\n   * we don't show the cart on a checkout page.\n   */\n  pageHasForm() {\n    return !!document.querySelector('sc-checkout');\n  }\n\n  /** Count the number of items in the cart. */\n  getItemsCount() {\n    const items = this.order()?.line_items?.data;\n    let count = 0;\n    (items || []).forEach(item => {\n      count = count + item?.quantity;\n    });\n    return count;\n  }\n\n  @Listen('scSetState')\n  handleSetState(e) {\n    this.uiState = e.detail;\n  }\n\n  /** Listen for error events in component. */\n  @Listen('scError')\n  handleErrorEvent(e) {\n    this.error = e.detail as ResponseError;\n    this.uiState = 'idle';\n  }\n\n  @Listen('scCloseCart')\n  handleCloseCart() {\n    this.open = false;\n  }\n\n  /** Fetch the order */\n  async fetchOrder() {\n    try {\n      this.uiState = 'loading';\n      const order = (await apiFetch({\n        method: 'GET', // create or update\n        path: addQueryArgs(`${baseUrl}${this.order()?.id}`, {\n          expand,\n        }),\n      })) as Checkout;\n      this.setOrder(order);\n    } catch (e) {\n      console.error(e);\n      throw e;\n    } finally {\n      this.uiState = 'idle';\n    }\n  }\n\n  componentWillLoad() {\n    Universe.create(this as Creator, this.state());\n    this.open = !!uiStore.state.cart.open;\n    uiStore.onChange('cart', cart => {\n      this.open = cart.open;\n    });\n    checkoutState.mode = this.mode;\n  }\n\n  state() {\n    return {\n      processor_data: this.order()?.processor_data,\n      uiState: this.uiState,\n      checkoutLink: this.checkoutLink,\n      loading: this.uiState === 'loading',\n      busy: this.uiState === 'busy',\n      navigating: this.uiState === 'navigating',\n      empty: !this.order()?.line_items?.pagination?.count,\n      error: this.error,\n      order: this.order(),\n      lineItems: this.order()?.line_items?.data || [],\n      tax_status: this.order()?.tax_status,\n      customerShippingAddress: typeof this.order()?.customer !== 'string' ? this.order()?.customer?.shipping_address : {},\n      shippingAddress: this.order()?.shipping_address,\n      taxStatus: this.order()?.tax_status,\n      formId: this.formId,\n    };\n  }\n\n  render() {\n    return (\n      <Fragment>\n        {this.order() && (\n          <Universe.Provider state={this.state()}>\n            <sc-cart-session-provider\n              order={this.order()}\n              form-id={this.formId}\n              group-id={this.formId}\n              onScUpdateOrderState={e => this.setOrder(e.detail)}\n              onScError={e => (this.error = e.detail as ResponseError)}\n            >\n              <sc-drawer open={this.open} onScAfterHide={() => (this.open = false)} onScAfterShow={() => (this.open = true)}>\n                {this.open === true && (\n                  <Fragment>\n                    <div class=\"cart__header-suffix\" slot=\"header\">\n                      <slot name=\"cart-header\" />\n                      <sc-error style={{ '--sc-alert-border-radius': '0' }} slot=\"header\" error={this.error} onScUpdateError={e => (this.error = e.detail)}></sc-error>\n                    </div>\n                    <slot />\n                  </Fragment>\n                )}\n                {this.uiState === 'busy' && <sc-block-ui z-index={9}></sc-block-ui>}\n              </sc-drawer>\n            </sc-cart-session-provider>\n          </Universe.Provider>\n        )}\n      </Fragment>\n    );\n  }\n}\n"],"version":3}
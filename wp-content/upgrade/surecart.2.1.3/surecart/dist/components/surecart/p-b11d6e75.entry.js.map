{"version":3,"names":["scCouponFormCss","wp","i18n","__","h","exportparts","type","class","clearable","onScClear"],"sources":["./src/components/ui/coupon-form/sc-coupon-form.scss?tag=sc-coupon-form&encapsulation=shadow","./src/components/ui/coupon-form/sc-coupon-form.tsx"],"sourcesContent":[":host {\n  display: block;\n}\n\nsc-button {\n  color: var(--sc-color-primary-500);\n}\n\n.coupon-form {\n  position: relative;\n  container-type: inline-size;\n\n  .coupon-button {\n    opacity: 0;\n    visibility: hidden;\n    transform: scale(0.90);\n    transition: all var(--sc-transition-fast) ease;\n  }\n\n  .coupon-button-mobile {\n    margin-top: var(--sc-input-label-margin);\n    display: none;\n  }\n\n  &--has-value {\n    .coupon-button {\n      opacity: 1;\n      visibility: visible;\n      transform: scale(1);\n    }\n  }\n}\n\n@container (max-width: 320px) {\n  .coupon-form {\n    .coupon-button {\n      display: none;\n    }\n    .coupon-button-mobile {\n      display: block;\n    }\n  }\n}\n\n.form {\n  opacity: 0;\n  visibility: hidden;\n  height: 0;\n  transform: translateY(5px);\n  transition: opacity var(--sc-transition-medium) ease, transform var(--sc-transition-medium) ease;\n  position: relative;\n  gap: var(--sc-spacing-small);\n}\n\n.coupon-form--is-open {\n  .form {\n    opacity: 1;\n    visibility: visible;\n    transform: translateY(0);\n    height: auto;\n    margin: var(--sc-spacing-small) 0;\n  }\n\n  .trigger {\n    display: none;\n  }\n}\n\n.trigger {\n  cursor: pointer;\n  font-size: var(--sc-font-size-small);\n  line-height: var(--sc-line-height-dense);\n  color: var(--sc-input-label-color);\n  user-select: none;\n\n  &:hover {\n    text-decoration: underline;\n  }\n}\n\n.coupon-form--is-rtl{\n  .trigger{\n    text-align: right;\n  }\n}\n","import { Component, Event, EventEmitter, h, Prop, State, Watch } from '@stencil/core';\nimport { __ } from '@wordpress/i18n';\nimport { isRtl } from '../../../functions/page-align';\n\nimport { getHumanDiscount } from '../../../functions/price';\nimport { DiscountResponse } from '../../../types';\n\n/**\n * @part base - The elements base wrapper.\n * @part form - The form.\n * @part input__base - The input base.\n * @part input - The input.\n * @part input__form-control - The input form control.\n * @part button__base - The button base element.\n * @part button__label - The button label.\n * @part info - The discount info.\n * @part discount - The discount displayed (% off)\n * @part amount - The discount amount.\n * @part discount-label - The discount label.\n * @part coupon-tag - The coupon tag.\n * @part error__base - The error base.\n * @part error__icon - The error icon\n * @part error__text - The error text.\n * @part error_title - The error title.\n * @part error__message - The error message.\n * @part block-ui - The block ui base component.\n * @part block-ui__content - The block ui content (spinner).\n */\n@Component({\n  tag: 'sc-coupon-form',\n  styleUrl: 'sc-coupon-form.scss',\n  shadow: true,\n})\nexport class ScCouponForm {\n  private input: HTMLScInputElement;\n\n  /** The label for the coupon form */\n  @Prop() label: string;\n\n  /** Is the form loading */\n  @Prop() loading: boolean;\n\n  /** Is the form calculating */\n  @Prop() busy: boolean;\n\n  /** The placeholder for the input */\n  @Prop() placeholder: string;\n\n  /** The error message */\n  @Prop({ mutable: true }) error: string;\n\n  /** Force the form to show */\n  @Prop() forceOpen: boolean;\n\n  /** The discount */\n  @Prop() discount: DiscountResponse;\n\n  /** Currency */\n  @Prop() currency: string;\n\n  /** The discount amount */\n  @Prop() discountAmount: number;\n\n  /** Is it open */\n  @Prop({ mutable: true }) open: boolean;\n\n  @Prop() collapsed: boolean;\n\n  /** The value of the input */\n  @State() value: string;\n\n  /** When the coupon is applied */\n  @Event() scApplyCoupon: EventEmitter<string>;\n\n  /** The text for apply button */\n  @Prop({ reflect: true }) buttonText: string;\n\n  /** Auto focus the input when opened. */\n  @Watch('open')\n  handleOpenChange(val) {\n    if (val) {\n      setTimeout(() => this.input.triggerFocus(), 50);\n    }\n  }\n\n  /** Close it when blurred and no value. */\n  handleBlur() {\n    if (!this.value) {\n      this.open = false;\n      this.error = '';\n    }\n  }\n\n  /** Apply the coupon. */\n  applyCoupon() {\n    this.scApplyCoupon.emit(this.input.value.toUpperCase());\n  }\n\n  handleKeyDown(e) {\n    if (e?.code === 'Enter') {\n      this.applyCoupon();\n    }\n  }\n\n  render() {\n    if (this.loading) {\n      return <sc-skeleton style={{ width: '120px', display: 'inline-block' }}></sc-skeleton>;\n    }\n\n    if (this?.discount?.promotion?.code) {\n      let humanDiscount = '';\n\n      if (this?.discount?.coupon && this?.discount?.coupon.percent_off) {\n        humanDiscount = getHumanDiscount(this?.discount?.coupon);\n      }\n\n      return (\n        <sc-line-item exportparts=\"description:info, price-description:discount, price:amount\">\n          <span slot=\"description\">\n            <div part=\"discount-label\">{__('Discount', 'surecart')}</div>\n            <sc-tag\n              exportparts=\"base:coupon-tag\"\n              type=\"success\"\n              class=\"coupon-tag\"\n              clearable\n              onScClear={() => {\n                this.scApplyCoupon.emit(null);\n                this.open = false;\n              }}\n            >\n              {this?.discount?.promotion?.code}\n            </sc-tag>\n          </span>\n\n          {humanDiscount && (\n            <span class=\"coupon-human-discount\" slot=\"price-description\">\n              ({humanDiscount})\n            </span>\n          )}\n\n          <span slot=\"price\">\n            <sc-format-number type=\"currency\" currency={this?.currency} value={this?.discountAmount}></sc-format-number>\n          </span>\n        </sc-line-item>\n      );\n    }\n\n    return this.collapsed ? (\n      <div\n        part=\"base\"\n        class={{\n          'coupon-form': true,\n          'coupon-form--is-open': this.open || this.forceOpen,\n          'coupon-form--has-value': !!this.value,\n          'coupon-form--is-rtl': isRtl(),\n        }}\n      >\n        <div\n          part=\"label\"\n          class=\"trigger\"\n          onMouseDown={() => {\n            if (this.open) {\n              return;\n            }\n            this.open = true;\n          }}\n        >\n          <slot name=\"label\">{this.label}</slot>\n        </div>\n\n        <div class=\"form\" part=\"form\">\n          <sc-input\n            exportparts=\"base:input__base, input, form-control:input__form-control\"\n            value={this.value}\n            onScInput={(e: any) => (this.value = e.target.value)}\n            placeholder={this.placeholder}\n            onScBlur={() => this.handleBlur()}\n            onKeyDown={e => this.handleKeyDown(e)}\n            ref={el => (this.input = el as HTMLScInputElement)}\n          >\n            <sc-button\n              exportparts=\"base:button__base, label:button_label\"\n              slot=\"suffix\"\n              type=\"text\"\n              loading={this.busy}\n              size=\"medium\"\n              class=\"coupon-button\"\n              onClick={() => this.applyCoupon()}\n            >\n              <slot>{this.buttonText}</slot>\n            </sc-button>\n          </sc-input>\n          <sc-button\n            exportparts=\"base:button__base, label:button_label\"\n            type=\"primary\"\n            outline\n            loading={this.busy}\n            size=\"medium\"\n            class=\"coupon-button-mobile\"\n            onClick={() => this.applyCoupon()}\n          >\n            <slot>{this.buttonText}</slot>\n          </sc-button>\n          {!!this.error && (\n            <sc-alert exportparts=\"base:error__base, icon:error__icon, text:error__text, title:error_title, message:error__message\" type=\"danger\" open>\n              <span slot=\"title\">{this.error}</span>\n            </sc-alert>\n          )}\n        </div>\n\n        {this.loading && <sc-block-ui exportparts=\"base:block-ui, content:block-ui__content\"></sc-block-ui>}\n      </div>\n    ) : (\n      <div\n        class={{\n          'coupon-form': true,\n          'coupon-form--has-value': !!this.value,\n          'coupon-form--is-rtl': isRtl(),\n        }}\n      >\n        <sc-input\n          label={this.label}\n          exportparts=\"base:input__base, input, form-control:input__form-control\"\n          value={this.value}\n          onScInput={(e: any) => (this.value = e.target.value)}\n          placeholder={this.placeholder}\n          onScBlur={() => this.handleBlur()}\n          onKeyDown={e => this.handleKeyDown(e)}\n          ref={el => (this.input = el as HTMLScInputElement)}\n        >\n          <sc-button\n            exportparts=\"base:button__base, label:button_label\"\n            slot=\"suffix\"\n            type=\"text\"\n            loading={this.busy}\n            size=\"medium\"\n            class=\"coupon-button\"\n            onClick={() => this.applyCoupon()}\n          >\n            <slot>{this.buttonText}</slot>\n          </sc-button>\n        </sc-input>\n        <sc-button\n          exportparts=\"base:button__base, label:button_label\"\n          type=\"primary\"\n          outline\n          loading={this.busy}\n          size=\"medium\"\n          class=\"coupon-button-mobile\"\n          onClick={() => this.applyCoupon()}\n        >\n          <slot>{this.buttonText}</slot>\n        </sc-button>\n        {!!this.error && (\n          <sc-alert exportparts=\"base:error__base, icon:error__icon, text:error__text, title:error_title, message:error__message\" type=\"danger\" open>\n            <span slot=\"title\">{this.error}</span>\n          </sc-alert>\n        )}\n      </div>\n    );\n  }\n}\n"],"mappings":"kJAAA,MAAMA,EAAkB,06C,02CCuHgBC,GAAAC,KAAAC,GAAE,wBAAAC,EAAA,UAAAC,YAAA,kBAAAC,KAAA,UAAAC,MAAA,aAAAC,UAAA,KAAAC,UAAA,K"}
{"version":3,"names":["scPasswordNagCss","wp","i18n","__","h","type","size","slot","onClick","this","set","name","onScFormSubmit","e","handleSubmit","label","required","ref","el","input","full","submit","busy","loading","Fragment","dismiss","spinner"],"sources":["./src/components/controllers/dashboard/sc-password-nag/sc-password-nag.css?tag=sc-password-nag&encapsulation=shadow","./src/components/controllers/dashboard/sc-password-nag/sc-password-nag.tsx"],"sourcesContent":[":host {\n  display: block;\n}\n","import { Component, Fragment, h, Prop, State, Watch } from '@stencil/core';\nimport apiFetch from '../../../../functions/fetch';\nimport { __ } from '@wordpress/i18n';\n\n@Component({\n  tag: 'sc-password-nag',\n  styleUrl: 'sc-password-nag.css',\n  shadow: true,\n})\nexport class ScPasswordNag {\n  private input: HTMLScInputElement;\n  @Prop({ mutable: true }) open: boolean = true;\n  /** The type of alert. */\n  @Prop({ reflect: true }) type: 'primary' | 'success' | 'info' | 'warning' | 'danger' = 'primary';\n  /** The success url. */\n  @Prop() successUrl: string;\n  /** Set a new password */\n  @State() set: boolean;\n  @State() loading: boolean;\n  @State() error: string;\n  @State() success: boolean;\n\n  /** Ensures strong password validation. */\n  @Prop({ reflect: true }) enableValidation = true;\n\n  @Watch('set')\n  handleSetChange() {\n    setTimeout(() => {\n      this.input && this.input.triggerFocus();\n    }, 50);\n  }\n\n  /** Dismiss the form. */\n  async dismiss() {\n    this.loading = true;\n    this.error = '';\n    try {\n      await apiFetch({\n        path: `wp/v2/users/me`,\n        method: 'PATCH',\n        data: {\n          meta: {\n            default_password_nag: false,\n          },\n        },\n      });\n      this.open = false;\n    } catch (e) {\n      this.error = e?.message || __('Something went wrong', 'surecart');\n      this.loading = false;\n    }\n  }\n\n  validatePassword(password: string) {\n    const regex = new RegExp('^(?=.*?[#?!@$%^&*-]).{6,}$');\n    if (regex.test(password)) return true;\n    return false;\n  }\n\n  /** Handle password submit. */\n  async handleSubmit(e) {\n    this.loading = true;\n    this.error = '';\n    try {\n      const { password, password_confirm } = await e.target.getFormJson();\n      if (password !== password_confirm) {\n        throw { message: __('Passwords do not match.', 'surecart') };\n      }\n      if (this.enableValidation && !this.validatePassword(password)) {\n        throw { message: __('Passwords should at least 6 characters and contain one special character.', 'surecart') };\n      }\n      await apiFetch({\n        path: `wp/v2/users/me`,\n        method: 'PATCH',\n        data: {\n          password,\n          meta: {\n            default_password_nag: false,\n          },\n        },\n      });\n      this.dismiss();\n      this.success = true;\n    } catch (e) {\n      this.error = e?.message || __('Something went wrong', 'surecart');\n      this.loading = false;\n    }\n  }\n\n  render() {\n    if (this.success) {\n      return (\n        <sc-alert type=\"success\" open>\n          <span slot=\"title\">{__('Success!', 'surecart')}</span>\n          {__('You have successfully set your password.', 'surecart')}\n        </sc-alert>\n      );\n    }\n\n    return (\n      <sc-alert type={this.type} open={this.open} exportparts=\"base, icon, text, title, message, close-icon\" style={{ position: 'relative' }}>\n        {!!this.error && this.error}\n        {this.set ? (\n          <sc-dashboard-module class=\"customer-details\">\n            <span slot=\"heading\">{__('Set A Password', 'surecart')} </span>\n            <sc-button type=\"text\" size=\"small\" slot=\"end\" onClick={() => (this.set = false)}>\n              <sc-icon name=\"x\" slot=\"prefix\" />\n              {__('Cancel', 'surecart')}\n            </sc-button>\n            <sc-card>\n              <sc-form onScFormSubmit={e => this.handleSubmit(e)}>\n                <sc-input label={__('New Password', 'surecart')} name=\"password\" type=\"password\" required ref={el => (this.input = el as HTMLScInputElement)} />\n                <sc-input label={__('Confirm New Password', 'surecart')} name=\"password_confirm\" type=\"password\" required />\n                <div>\n                  <sc-button type=\"primary\" full submit busy={this.loading}>\n                    {__('Update Password', 'surecart')}\n                  </sc-button>\n                </div>\n              </sc-form>\n            </sc-card>\n          </sc-dashboard-module>\n        ) : (\n          <Fragment>\n            <slot name=\"title\" slot=\"title\">\n              {__('Reminder', 'surecart')}\n            </slot>\n            <slot>{__('You have not yet set a password. Please set a password for your account.', 'surecart')}</slot>\n            <sc-flex justify-content=\"flex-start\">\n              <sc-button size=\"small\" type=\"primary\" onClick={() => (this.set = true)}>\n                {__('Set A Password', 'surecart')}\n              </sc-button>\n              <sc-button size=\"small\" type=\"text\" onClick={() => this.dismiss()}>\n                {__('Dismiss', 'surecart')}\n              </sc-button>\n            </sc-flex>\n          </Fragment>\n        )}\n        {this.loading && <sc-block-ui spinner></sc-block-ui>}\n      </sc-alert>\n    );\n  }\n}\n"],"mappings":"yGAAA,MAAMA,EAAmB,uB,8fCgDQC,GAAAC,KAAAC,GAAE,mC,mRAkBVF,GAAAC,KAAAC,GAAE,sC,oEAGFF,GAAAC,KAAAC,GAAE,wF,mMAeMF,GAAAC,KAAAC,GAAE,mC,qHASLF,GAAAC,KAAAC,GAAE,wBACrBF,GAAAC,KAAAC,GAAE,uD,2PAUqBF,GAAAC,KAAAC,GAAE,kCAAAC,EAAA,aAAAC,KAAA,OAAAC,KAAA,QAAAC,KAAA,MAAAC,QAAA,IAAAC,KAAAC,IAAA,OAAAN,EAAA,WAAAO,KAAA,IAAAJ,KAAA,WAGrBN,GAAAC,KAAAC,GAAE,sBAAAC,EAAA,eAAAA,EAAA,WAAAQ,eAAAC,GAAAJ,KAAAK,aAAAD,IAAAT,EAAA,YAAAW,MAIgBd,GAAAC,KAAAC,GAAE,2BAAAQ,KAAA,WAAAN,KAAA,WAAAW,SAAA,KAAAC,IAAAC,GAAAT,KAAAU,MAAAD,IAAAd,EAAA,YAAAW,MACFd,GAAAC,KAAAC,GAAE,mCAAAQ,KAAA,mBAAAN,KAAA,WAAAW,SAAA,OAAAZ,EAAA,WAAAA,EAAA,aAAAC,KAAA,UAAAe,KAAA,KAAAC,OAAA,KAAAC,KAAAb,KAAAc,SAGdtB,GAAAC,KAAAC,GAAE,mCAAAC,EAAAoB,EAAA,KAAApB,EAAA,QAAAO,KAAA,QAAAJ,KAAA,SASRN,GAAAC,KAAAC,GAAE,wBAAAC,EAAA,YAEEH,GAAAC,KAAAC,GAAE,wFAAAC,EAAA,2CAAAA,EAAA,aAAAE,KAAA,QAAAD,KAAA,UAAAG,QAAA,IAAAC,KAAAC,IAAA,MAGJT,GAAAC,KAAAC,GAAE,8BAAAC,EAAA,aAAAE,KAAA,QAAAD,KAAA,OAAAG,QAAA,IAAAC,KAAAgB,WAGFxB,GAAAC,KAAAC,GAAE,yBAAAM,KAAAc,SAAAnB,EAAA,eAAAsB,QAAA,O"}
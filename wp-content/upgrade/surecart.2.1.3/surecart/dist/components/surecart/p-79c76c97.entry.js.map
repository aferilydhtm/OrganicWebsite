{"version":3,"names":["listenTo","prop","propKey","callback","on","key","newValue","oldValue","Array","isArray","some","JSON","stringify","scCheckoutMolliePaymentCss","wp","i18n","__","sprintf","method","description","image","h","slot","src","style","width","ManualPaymentMethods","methods","availableManualPaymentMethods","checkoutIsLocked","class"],"sources":["./src/store/checkout/functions.ts","./src/components/controllers/checkout-form/sc-checkout-mollie-payment/sc-checkout-mollie-payment.css?tag=sc-checkout-mollie-payment&encapsulation=shadow","./src/components/controllers/checkout-form/sc-checkout-mollie-payment/sc-checkout-mollie-payment.tsx"],"sourcesContent":["import { on } from './store';\n\nexport const listenTo = (prop, propKey: string | string[], callback) =>\n  on('set', (key, newValue, oldValue) => {\n    // ignore non-keys\n    if (key !== prop) return;\n\n    // handle an array, if one has changed, run callback.\n    if (Array.isArray(propKey)) {\n      if (propKey.some(key => JSON.stringify(newValue?.[key]) !== JSON.stringify(oldValue?.[key]))) {\n        return callback(newValue, oldValue);\n      }\n    }\n\n    // handle string.\n    if (typeof propKey === 'string') {\n      if (JSON.stringify(newValue?.[propKey]) === JSON.stringify(oldValue?.[propKey])) return;\n      return callback(newValue?.[propKey], oldValue?.[propKey]);\n    }\n  });\n",":host {\n  display: block;\n}\n","import { Component, Event, EventEmitter, Fragment, h, Prop, State } from '@stencil/core';\nimport { Address, Pagination, PaymentMethodType, ResponseError } from '../../../../types';\nimport { sprintf, __ } from '@wordpress/i18n';\nimport { addQueryArgs } from '@wordpress/url';\nimport { state as selectedProcessor } from '@store/selected-processor';\nimport { state as processorsState } from '@store/processors';\nimport { hasMultipleMethodChoices, availableMethodTypes, availableManualPaymentMethods } from '@store/processors/getters';\n// checkout store.\nimport { state as checkoutState } from '@store/checkout';\nimport { listenTo } from '@store/checkout/functions';\nimport { checkoutIsLocked } from '@store/checkout/getters';\nimport { lockCheckout, unLockCheckout } from '@store/checkout/mutations';\n\nimport apiFetch from '../../../../functions/fetch';\n\nimport { ManualPaymentMethods } from '../payment/ManualPaymentMethods';\n\n@Component({\n  tag: 'sc-checkout-mollie-payment',\n  styleUrl: 'sc-checkout-mollie-payment.css',\n  shadow: true,\n})\nexport class ScCheckoutMolliePayment {\n  @Prop() processorId: string;\n  @Prop() method: string;\n\n  @State() error: ResponseError;\n  @State() methods: PaymentMethodType[];\n\n  /** Error event */\n  @Event() scError: EventEmitter<ResponseError>;\n\n  componentWillLoad() {\n    selectedProcessor.id = 'mollie';\n    this.fetchMethods();\n    listenTo('checkout', ['total_amount', 'currency', 'reusabled_payment_method_required', 'shipping_address'], () => this.fetchMethods());\n  }\n\n  async fetchMethods() {\n    const checkout = checkoutState.checkout;\n    if (!checkout?.currency || !checkout?.total_amount) return; // wait until we have a currency.\n    try {\n      lockCheckout('methods');\n      const response = (await apiFetch({\n        path: addQueryArgs(`surecart/v1/processors/${this.processorId}/payment_method_types`, {\n          amount: checkout?.total_amount,\n          country: (checkout?.shipping_address as Address)?.country || 'us',\n          currency: checkout?.currency,\n          ...(checkout?.reusable_payment_method_required ? { reusable: checkout?.reusable_payment_method_required } : {}),\n          per_page: 100,\n        }),\n      })) as {\n        object: 'list';\n        pagination: Pagination;\n        data: PaymentMethodType[];\n      };\n      processorsState.methods = response?.data || [];\n    } catch (e) {\n      this.scError.emit(e);\n      console.error(e);\n    } finally {\n      unLockCheckout('methods');\n    }\n  }\n\n  renderLoading() {\n    return (\n      <sc-card>\n        <sc-skeleton style={{ width: '50%', marginBottom: '0.5em' }}></sc-skeleton>\n        <sc-skeleton style={{ width: '30%', marginBottom: '0.5em' }}></sc-skeleton>\n        <sc-skeleton style={{ width: '60%', marginBottom: '0.5em' }}></sc-skeleton>\n      </sc-card>\n    );\n  }\n\n  render() {\n    if (checkoutIsLocked('methods') && !availableMethodTypes()?.length) {\n      return this.renderLoading();\n    }\n\n    if (!checkoutState.checkout?.currency) {\n      return this.renderLoading();\n    }\n\n    if (!availableMethodTypes()?.length) {\n      return (\n        <sc-alert type=\"warning\" open>\n          {__('No available payment methods', 'surecart')}{' '}\n        </sc-alert>\n      );\n    }\n\n    const Tag = hasMultipleMethodChoices() ? 'sc-toggles' : 'div';\n\n    return (\n      <Fragment>\n        <Tag collapsible={false} theme=\"container\">\n          {(availableMethodTypes() || []).map(method => (\n            <sc-payment-method-choice processor-id=\"mollie\" method-id={method?.id} key={method?.id}>\n              <span slot=\"summary\" class=\"sc-payment-toggle-summary\">\n                {!!method?.image && <img src={method?.image} />}\n                <span>{method?.description}</span>\n              </span>\n\n              <sc-card>\n                <sc-payment-selected label={sprintf(__('%s selected for check out.', 'surecart'), method?.description)}>\n                  {!!method?.image && <img slot=\"icon\" src={method?.image} style={{ width: '32px' }} />}\n                  {__('Another step will appear after submitting your order to complete your purchase details.', 'surecart')}\n                </sc-payment-selected>\n              </sc-card>\n            </sc-payment-method-choice>\n          ))}\n          <ManualPaymentMethods methods={availableManualPaymentMethods()} />\n        </Tag>\n        {!!checkoutIsLocked('methods') && <sc-block-ui class=\"busy-block-ui\" z-index={9} style={{ '--sc-block-ui-opacity': '0.4' }}></sc-block-ui>}\n      </Fragment>\n    );\n  }\n}\n"],"mappings":"+bAEO,MAAMA,EAAW,CAACC,EAAMC,EAA4BC,IACzDC,EAAG,OAAO,CAACC,EAAKC,EAAUC,KAExB,GAAIF,IAAQJ,EAAM,OAGlB,GAAIO,MAAMC,QAAQP,GAAU,CAC1B,GAAIA,EAAQQ,MAAKL,GAAOM,KAAKC,UAAUN,IAAQ,MAARA,SAAQ,SAARA,EAAWD,MAAUM,KAAKC,UAAUL,IAAQ,MAARA,SAAQ,SAARA,EAAWF,MAAQ,CAC5F,OAAOF,EAASG,EAAUC,E,EAK9B,UAAWL,IAAY,SAAU,CAC/B,GAAIS,KAAKC,UAAUN,IAAQ,MAARA,SAAQ,SAARA,EAAWJ,MAAcS,KAAKC,UAAUL,IAAQ,MAARA,SAAQ,SAARA,EAAWL,IAAW,OACjF,OAAOC,EAASG,IAAQ,MAARA,SAAQ,SAARA,EAAWJ,GAAUK,IAAQ,MAARA,SAAQ,SAARA,EAAWL,G,KCjBtD,MAAMW,EAA6B,uB,0jDCuFxBC,GAAAC,KAAAC,GAAE,+C,ufAkB+BF,GAAAC,KAAAE,QAAQH,GAAAC,KAAAC,GAAE,yCAAAE,IAAA,MAAAA,SAAA,SAAAA,EAAAC,iBAAAD,IAAA,MAAAA,SAAA,SAAAA,EAAAE,QAAAC,EAAA,OAAAC,KAAA,OAAAC,IAAAL,IAAA,MAAAA,SAAA,SAAAA,EAAAE,MAAAI,MAAA,CAAAC,MAAA,UAEnCX,GAAAC,KAAAC,GAAE,2GAAAK,EAAAK,EAAA,CAAAC,QAAAC,SAAAC,EAAA,YAAAR,EAAA,eAAAS,MAAA,4BAAAN,MAAA,kC"}